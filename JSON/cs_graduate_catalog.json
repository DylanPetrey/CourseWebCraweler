{
    "SE 5354": {
        "Title": "Software Engineering",
        "Description": "Formal specification and program verification. Software life-cycle models and their stages. System and software requirements engineering; user-interface design. Software architecture, design, and analysis. Software testing, validation, and quality assurance.",
        "Hours": "3",
        "Year": "2022"
    },
    "SE 5V81": {
        "Title": "Special Topics in Computer Science",
        "Description": "May be repeated for credit as topics vary (9 semester credit hours maximum).",
        "Hours": "1-9",
        "Year": "2022"
    },
    "SE 6301": {
        "Title": "Special Topics in Software Engineering",
        "Description": "May be repeated for credit as topics vary.",
        "Hours": "3",
        "Year": "2022"
    },
    "SE 6316": {
        "Title": "Agile Methods",
        "Description": "The course addresses what agile methods are, how they are implemented (correctly), and their impact on software engineering. A variety of agile methods are described with a focus on Scrum. Issues associated with planning and controlling agile projects, along with the challenges associated with adopting agile methods are discussed.",
        "Hours": "3",
        "Year": "2022"
    },
    "SE 6329": {
        "Title": "Object-Oriented Software Engineering",
        "Description": "Concepts, methods and techniques necessary to efficiently capture software requirements in use cases and transform them into design and implementation. Use of UML in the context of an iterative, agile process with an OO model transformation approach. Use of an advanced CASE tool that allows the synchronization between the various models and the code.",
        "Hours": "3",
        "Year": "2022"
    },
    "SE 6354": {
        "Title": "Advanced Software Engineering",
        "Description": "This course covers advanced theoretical concepts in software engineering and provides an extensive hands-on experience in dealing with various issues of software development. It involves a semester-long group software development project spanning software project planning and management, analysis of requirements, construction of software architecture and design, implementation, and quality assessment. The course will introduce formal specification, component-based software engineering, and software maintenance and evolution. Must have knowledge of Java.",
        "Hours": "3",
        "Year": "2022"
    },
    "SE 6356": {
        "Title": "Software Maintenance, Evolution, and Re-Engineering",
        "Description": "Principles and techniques of software maintenance. Impact of software development process on software justifiability, maintainability, evolvability, and planning of release cycles. Use of very high-level languages and dependencies for forward engineering and reverse engineering. Achievements, pitfalls, and trends in software reuse, reverse engineering, and re-engineering.",
        "Hours": "3",
        "Year": "2022"
    },
    "SE 6361": {
        "Title": "Advanced Requirements Engineering",
        "Description": "System and software requirements engineering. Identification, elicitation, modeling, analysis, specification, management, and evolution of functional and non-functional requirements. Strengths and weaknesses of different techniques, tools, and object-oriented methodologies. Interactions and trade-offs among hardware, software, and organization. System and sub-system integration with software and organization as components of complex, composite systems. Transition from requirements to design. Critical issues in requirements engineering.",
        "Hours": "3",
        "Year": "2022"
    },
    "SE 6362": {
        "Title": "Advanced Software Architecture and Design",
        "Description": "Concepts and methodologies for the development, evolution, and reuse of software architecture and design, with an emphasis on object-orientation. Identification, analysis, and synthesis of system data, process, communication, and control components. Decomposition, assignment, and composition of functionality to design elements and connectors. Use of non-functional requirements for analyzing trade-offs and selecting among design alternatives. Transition from requirements to software architecture, design, and to implementation. State of the practice and art.",
        "Hours": "3",
        "Year": "2022"
    },
    "SE 6367": {
        "Title": "Software Testing, Validation and Verification",
        "Description": "Fundamental concepts of software testing. Functional testing. GUI based testing tools. Control flow based test adequacy criteria. Data flow based test adequacy criteria. White box based testing tools. Mutation testing and testing tools. Relationship between test adequacy criteria. Finite state machine based testing. Static and dynamic program slicing for testing and debugging. Software reliability. Formal verification of program correctness.",
        "Hours": "3",
        "Year": "2022"
    },
    "SE 6387": {
        "Title": "Advanced Software Engineering Project",
        "Description": "This course is intended to provide experience in a group project that requires advanced technical solutions, such as distributed multi-tier architectures, component-based technologies, automated software engineering, etc., for developing applications, such as web-based systems, knowledge-based systems, real-time systems, etc. The students will develop and maintain requirements, architecture and detailed design, implementation, and testing and their traceability relationships. Best practices in software engineering will be applied.",
        "Hours": "3",
        "Year": "2022"
    },
    "SE 6388": {
        "Title": "Software Project Planning and Management",
        "Description": "Techniques and disciplines for successful management of software projects. Project planning and contracts. Advanced cost estimation models. Risk management process and activities. Advanced scheduling techniques. Definition, management, and optimization of software engineering processes. Statistical process control. Software configuration management. Capability Maturity Model Integration (CMMI).",
        "Hours": "3",
        "Year": "2022"
    },
    "SE 6V81": {
        "Title": "Independent Study in Software Engineering",
        "Description": "May be repeated for credit.",
        "Hours": "1-9",
        "Year": "2022"
    },
    "ECSC 5177": {
        "Title": "CS IPP Assignment",
        "Description": "Work in an approved, supervised, computer science position. Students will complete an IPP Work Report including a written Narrative focusing on the accomplishments and learning gained through the IPP experience. Pass/Fail only. May be repeated for credit. Instructor consent required.",
        "Hours": "1",
        "Year": "2022"
    },
    "ECSC 5179": {
        "Title": "ENG IPP Assignment",
        "Description": "Work in an approved, supervised, engineering position. Students will complete an IPP Work Report including a written Narrative focusing on the accomplishments and learning gained through the IPP experience. Pass/Fail only. May be repeated for credit. Instructor consent required.",
        "Hours": "1",
        "Year": "2022"
    },
    "CS 5302": {
        "Title": "Topics in Computer Science",
        "Description": "May be repeated for credit as topics vary (6 semester credit hours maximum).",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 5303": {
        "Title": "Computer Science I",
        "Description": "Computer science problem solving. The structure and nature of algorithms and their corresponding computer program implementation. Programming in a high level block-structured language (e.g., PASCAL, Ada, C++, or JAVA). Elementary data structures: arrays, records, linked lists, trees, stacks and queues.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 5330": {
        "Title": "Computer Science II",
        "Description": "Basic concepts of computer organization: Numbering systems, two's complement notation, multi-level machine concepts, machine language, assembly programming and optimization, subroutine calls, addressing modes, code generation process, CPU datapath, pipelining, RISC, CISC, and performance calculation.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 5333": {
        "Title": "Discrete Structures",
        "Description": "Mathematical foundations of computer science. Logic, sets, relations, graphs and algebraic structures. Combinatorics and metrics for performance evaluation of algorithms.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 5343": {
        "Title": "Algorithm Analysis and Data Structures",
        "Description": "Formal specifications and representation of lists, arrays, trees, graphs, multilinked structures, strings, and recursive pattern structures. Analysis of associated algorithms. Sorting and searching, file structures. Relational data models.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 5348": {
        "Title": "Operating Systems Concepts",
        "Description": "Processes and threads. Concurrency issues including semaphores, monitors and deadlocks. Simple memory management. Virtual memory management. CPU scheduling algorithms. I/O management. File management. Introduction to distributed systems. Must have a working knowledge of C and Unix.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 5349": {
        "Title": "Automata Theory",
        "Description": "Deterministic and nondeterministic finite automata; regular expressions, regular sets, context-free grammars, pushdown automata, context free languages. Selected topics from Turing Machines and undecidability.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 5375": {
        "Title": "Principles of UNIX",
        "Description": "Design and history of the UNIX operating system. Detailed study of process and file system data structures. Shell programming in UNIX. Use of process-forking functionality of UNIX to simplify complex problems. Interprocess communication and coordination. Device drivers and streams as interfaces to hardware features. TCP/IP and other UNIX inter-machine communication facilities. Recommended prerequisite: CS 3335.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 5390": {
        "Title": "Computer Networks",
        "Description": "The design and analysis of protocols for computer networking. Topics include: network protocol design and composition via layering, contention resolution in multi-access networks, routing metrics and optimal path searching, traffic management, global network protocols; dealing with heterogeneity and scalability.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 5V81": {
        "Title": "Special Topics in Computer Science",
        "Description": "May be repeated as topics vary (9 semester credit hours maximum).",
        "Hours": "1-9",
        "Year": "2022"
    },
    "CS 6301": {
        "Title": "Special Topics in Computer Science",
        "Description": "May be repeated for credit as topics vary.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6302": {
        "Title": "Special Topics in Computer Science",
        "Description": "Special Topics in Computer Science for Non-CS/SE Majors.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6303": {
        "Title": "Cyber Security Essentials for Practitioners",
        "Description": "The Cybersecurity Essentials course develops a foundational understanding of cybersecurity as a business risk. This class will help identify threats to an organization and how they relate to cyber security. An in-depth understanding of the different types of cyberattacks, the business systems that are most at risk, and the importance of an organization-wide approach to cybersecurity. This course will also cover the crucial role of leadership in managing cyber risk throughout the entire organization. May not be used to satisfy the degree requirements of the MS CS or the MS SE degree plans.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6304": {
        "Title": "Computer Architecture",
        "Description": "Trends in processor, memory, I/O and system design. Techniques for quantitative analysis and evaluation of computer systems to understand and compare alternative design choices in system design. Components in high performance processors and computers: pipelining, instruction level parallelism, memory hierarchies, and input/output. Students will undertake a major computing system analysis and design project. Must have an understanding of C/C++.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6305": {
        "Title": "Data Security and Privacy for Practitioners",
        "Description": "The course will teach principles, tools, and trends for data and application security and privacy. Topics to be covered include: confidentiality, privacy and trust management. Additionally, best practices and policies to promote secure databases, distributed systems, and applications such as social media systems, the cloud, and IoT systems will be covered. In addition, the privacy implications of data analytics and potential solutions will be discussed. Students will assess one system or application to identify potential vulnerabilities and identify possible remediations. The topics include an overview of common and emerging vectors of attack and the best practices for deterring them. May not be used to satisfy degree requirements for the MS CS or the MS SE degree plans.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6306": {
        "Title": "Cyber Security Analytics & Malware Analysis for Practitioners",
        "Description": "A supervisory view of security vulnerabilities in information systems, applications and safe computing. Additionally, best practices to promote security standards and applications, management and analysis of security. Applications of data science techniques, preparation for adversarial attacks. May not be used to satisfy degree requirements for the MS CS or the MS SE degree plans.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6307": {
        "Title": "Introduction to Big Data Management and Analytics for non CS-Majors",
        "Description": "Database fundamentals including Query Processing, Parallel/Distributed Data Processing, NoSQL systems (e.g., Key-value stores, Column-oriented data stores, MapReduce), Graph Processing, and Recommendation Systems using Big Data technologies. This course can not be used to satisfy the requirements for the MS CS or the MS SE degree plans.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6308": {
        "Title": "Cyber Physical Systems and Critical Infrastructure Security for Practitioners",
        "Description": "The Stuxnet attack was a wake-up call to improve the security of our critical infrastructures, which include transportation networks, the power grid, and other cyber-physical systems, where computation, communications, and control are tightly integrated. This class covers the security of cyber-physical systems from a multi-disciplinary point of view, from computer science security research (network security and software security), to public policy (e.g., the Executive Order 13636), risk-assessment, business drivers, and control-theoretic methods to reduce the cyber-risk to cyber-physical critical infrastructures. Students are required to participate in several cyber war games. May not be used to satisfy degree requirements for the MS CS or the MS SE degree plans.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6313": {
        "Title": "Statistical Methods for Data Science",
        "Description": "Statistical methods for data science. Statistical Methods are developed at an intermediate level. Sampling distributions. Point and interval estimation. Parametric and nonparametric hypothesis testing. Analysis of variance. Regression, model building and model diagnostics. Monte Carlo simulation and bootstrap. Introduction to a statistical software package.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6314": {
        "Title": "Web Programming Languages",
        "Description": "Advanced understanding of web architecture, standards, protocols, tools, and technologies. Tools required for web programming including HTML, CSS, and JavaScript; XML and database technologies; server-side programming using PHP; Web security protocols and standards; techniques and algorithms related to web services, cloud computing, and semantic web.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6315": {
        "Title": "Semantic Web",
        "Description": "History and foundations of semantic web. URIs and namespaces; XML and XMLS Datatypes, RDF and RDF/XML, RDFS, and OWL (Lite, DL and Full); applications of semantic web; introduction to OWL 2 features and profiles; design patterns used in the creation of semantic web solutions.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6319": {
        "Title": "Computational Geometry",
        "Description": "This course will cover basic computational geometry topics, such as computing convex hulls, computing Voronoi diagrams and Delaunay triangulations, motion planning, and the main methods for developing geometric algorithms. We will also discuss various geometric data structures for point location and range searching and additional topics at the discretion of the instructor, such as geometric approximation and high dimensional data analysis.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6320": {
        "Title": "Natural Language Processing",
        "Description": "This course covers state-of-the-art methods for natural language processing. After an introduction to the basics of syntax, semantic, and discourse analysis, the focus shifts to the integration of these modules into natural-language processing systems. In addition to natural language understanding, the course presents advanced material on lexical knowledge acquisition, natural language generation, machine translation, and parallel processing of natural language.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6321": {
        "Title": "Discourse Processing",
        "Description": "Introduction to discourse processing from natural language texts. Automatic clustering of utterances into coherent units (segments) with hierarchical structures. State-of-the-art research in textual cohesion, coherence, and discourse understanding. Included topics are anaphoric reference and ellipsis, notion of textual context, and relationship between tense, aspect, and discourse states.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6322": {
        "Title": "Information Retrieval",
        "Description": "This course covers modern techniques for storing and retrieving unformatted textual data and providing answers to natural language queries. Current research topics and applications of information retrieval in data mining, data warehousing, text mining, digital libraries, hypertext, multimedia data, and query processing are also presented.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6323": {
        "Title": "Computer Animation and Gaming",
        "Description": "Theoretical foundations and programming techniques involved in computer animation and game engines. Specific topics include 2D and 3D transformations, skeletons, forward and inverse kinematics, skinning, keyframing, particle systems, rigid bodies, cloth animation, collision detection, and animation for video games.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6324": {
        "Title": "Information Security",
        "Description": "A comprehensive study of security vulnerabilities in information systems and the basic techniques for developing secure applications and practicing safe computing. Topics include common attacking techniques such as buffer overflow, Trojan, virus, etc. UNIX, Windows and Java security. Conventional encryption. Hashing functions and data integrity. Public-key encryption (RSA, Elliptic-Curve). Digital signature. Watermarking for multimedia. Security standards and applications. Building secure software and systems. Management and analysis of security. Legal and ethical issues in computer security.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6326": {
        "Title": "Human Computer Interactions",
        "Description": "In-depth exploration of human-computer interactions (HCI). Models and principles of HCI. The user experience (UX) lifecycle and design guidelines for a wide variety of advanced interfaces, such as mobile devices and 3D sensors. UX evaluation of interface designs.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6327": {
        "Title": "Video Analytics",
        "Description": "In-depth analysis of topics such as: video features for (human) activity and event detection; large-scale video event classification algorithms; objects-in-video counting approaches; multi-camera video handling; compressed video event detection and analyzing video in large-scale human traffic areas (such as shopping malls, airports, train-stations, etc.).",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6328": {
        "Title": "Modeling and Simulation",
        "Description": "Theory and practice of modeling, including models for concepts, knowledge, geometry, and dynamics. A variety of model types are covered along with their algebraic and diagrammatic representations. Creative media design and representation of models is stressed.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6331": {
        "Title": "Multimedia Systems",
        "Description": "Analyzing and understanding how different media data (such as text, audio, images, video, and 3D graphics) can be stored, queried, delivered, and consumed. These aspects will be discussed from the point of view of the operating system, databases, and networking.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6332": {
        "Title": "Systems Security and Malicious Code Analysis",
        "Description": "Concepts, techniques, and tools to capture the structure, format, and representation of binary code, and transform them for higher level analysis. Use of static analysis including data-flow analysis, point-to analysis, and shape analysis to reason about the abstractions inside binary code. Use of dynamic binary instrumentation to trace the instruction level behavior of both benign and malicious programs. Use of virtual machines to observe the whole system level behavior including OS kernels.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6334": {
        "Title": "Virtual Reality",
        "Description": "Theory and practice of virtual reality (VR). Provides in-depth overview of VR, including input devices, output devices, 3D navigation techniques, 3D selection and manipulation techniques, system control techniques, interaction fidelity, scenario fidelity, display fidelity, design guidelines, and evaluation methods.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6340": {
        "Title": "Wireless Networks",
        "Description": "Fundamental techniques in design and operation of the 2G-5G wireless cellular networks and wireless LANs, including the control and the data planes. Introduction to future technologies, such as 6G and IoT. The course is a mix of qualitative and quantitative presentation.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6343": {
        "Title": "Cloud Computing",
        "Description": "Different layers of cloud computing, infrastructure as a service (IaaS), platform as a service (PaaS), and software as a service (SaaS). Data centers. Resource management, power management, and health monitoring in IaaS cloud. Hadoop MapReduce for big data computing. PaaS examples such as GAE, Force.com. SaaS concepts and enabling technologies. Cloud storage theory and practical solutions such as GFS, Big Table, HDFS, HBase, Dynamo, Pnuts. Erasure coding and secret sharing based cloud storage. Virtualization and emulation. Server virtualization, storage virtualization, and network virtualization. Cloud security.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6344": {
        "Title": "Data Representations",
        "Description": "Useful representations of data for efficient manipulation and visualization. These include, among others Dimensionality Reduction, Clustering, Euclidean Embedding, Graph Embedding, and Discriminant Functions. Techniques covered include principal component analysis (PCA), singular value decomposition (SVD), clustering, and various randomized techniques. Special emphasis is given to the performance of these techniques on big data.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6346": {
        "Title": "Introduction to Multicore Programming",
        "Description": "Introduction to multi-core and GPU architecture concepts. Classic and modern algorithms for coordination and synchronization. Blocking and non-blocking synchronization. Correctness conditions and reasoning about concurrent algorithms. Data structures that exploit and extract performance from multiple cores. Concurrent memory reclamation techniques. GPU programming with CUDA.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6347": {
        "Title": "Statistical Methods in AI and Machine Learning",
        "Description": "Introduction to the probabilistic and statistical techniques used in modern computer systems. Probabilistic graphical models such as Bayesian and Markov networks. Probabilistic inference techniques including variable elimination, belief propagation and its generalizations, and sampling-based algorithms such as importance sampling and Markov Chain Monte Carlo sampling. Statistical learning techniques for learning the structure and parameters of graphical models. Sequential models such as Hidden Markov models and Dynamic Bayesian networks.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6348": {
        "Title": "Data and Applications Security",
        "Description": "The course will teach principles, technologies, tools and trends for data, and applications security and privacy. Topics to be covered include: confidentiality, privacy and trust management; advanced access control policy management; secure databases; secure distributed systems; encryption techniques for database security; blockchain based techniques for ensuring data integrity; data privacy; privacy-preserving data mining. Students will take one system or application and develop a secure version of that system or application for the programming project.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6349": {
        "Title": "Network Security",
        "Description": "This course covers theoretical and practical aspects of network security. The topics include use of cryptography for building secure communication protocols and authentication systems; security handshake pitfalls, Kerberos and PKI, security of TCP/IP protocols including IPsec, BGP security, VPNs, IDSes, firewalls, and anonymous routing; security of TCP/IP applications; wireless LAN security; denial-of-service defense. Students are required to do a programming project building a distributed application with certain secure communication features and required to participate in several network security lab exercises and cyber war games.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6350": {
        "Title": "Big Data Management and Analytics",
        "Description": "This course focuses on scalable data management and mining algorithms for analyzing very large amounts of data (i.e., Big Data). Included topics are: Mapreduce, NoSQL systems (e.g., key-value stores, column-oriented data stores, stream processing systems), association rule mining, large scale supervised and unsupervised learning, state of the art research in data streams, and applications including recommendation systems, web and big data security.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6352": {
        "Title": "Performance of Computer Systems and Networks",
        "Description": "Overview of case studies. Quick review of principles of probability theory. Queuing models and physical origin of random variables used in queuing models. Various important cases of the M/M/m/N queuing system. Little's law. The M/G/1 queuing system. Simulation of queuing systems. Product form solutions of open and closed queuing networks. Convolution algorithms and Mean Value Analysis for closed queuing networks. Discrete time queuing systems.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6353": {
        "Title": "Compiler Construction",
        "Description": "Lexical analyzers, context-free grammars. Top-down and bottom-up parsing; shift reduce and LR parsing. Operator-precedence, recursive-descent, predictive, and LL parsing. LR (k), LL (k) and precedence grammars will be covered.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6356": {
        "Title": "Software Maintenance, Evolution, and Re-Engineering",
        "Description": "Principles and techniques of software maintenance. Impact of software development process on software justifiability, maintainability, evolvability, and planning of release cycles. Use of very high-level languages and dependencies for forward engineering and reverse engineering. Achievements, pitfalls, and trends in software reuse, reverse engineering, and re-engineering.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6359": {
        "Title": "Object-Oriented Analysis and Design",
        "Description": "Analysis and practice of modern tools and concepts that can help produce software that is tolerant of change. Consideration of the primary tools of encapsulation and inheritance. Construction of software-ICs which show the parallel with hardware construction.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6360": {
        "Title": "Database Design",
        "Description": "Methods, principles, and concepts that are relevant to the practice of database software design. Database system architecture; conceptual database models; relational and object-oriented databases; database system implementation; query processing and optimization; transaction processing concepts, concurrency, and recovery; security.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6361": {
        "Title": "Advanced Requirements Engineering",
        "Description": "System and software requirements engineering. Identification, elicitation, modeling, analysis, specification, management, and evolution of functional and non-functional requirements. Strengths and weaknesses of different techniques, tools, and object-oriented methodologies. Interactions and trade-offs among hardware, software, and organization. System and sub-system integration with software and organization as components of complex, composite systems. Transition from requirements to design. Critical issues in requirements engineering.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6363": {
        "Title": "Design and Analysis of Computer Algorithms",
        "Description": "The study of efficient algorithms for various computational problems. Algorithm design techniques. Sorting, manipulation of data structures, graphs, matrix multiplication, and pattern matching. Complexity of algorithms, lower bounds, NP completeness.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6364": {
        "Title": "Artificial Intelligence",
        "Description": "Design of machines that exhibit intelligence. Particular topics include: representation of knowledge, vision, natural language processing, search, logic and deduction, expert systems, planning, language comprehension, and machine learning.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6366": {
        "Title": "Computer Graphics",
        "Description": "Device and logical coordinate systems. Geometric transformations in two and three dimensions. Algorithms for basic 2-D drawing primitives, such as Brensenham's algorithm for lines and circles, Bezier and B-Spline functions for curves, and line and polygon clipping algorithms. Perspectives in 3-D, and hidden-line and hidden-face elimination, such as Painter's and Z-Buffer algorithms. Fractals and the Mandelbrot set.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6367": {
        "Title": "Software Testing, Validation and Verification",
        "Description": "Fundamental concepts of software testing. Functional testing. GUI based testing tools. Control flow based test adequacy criteria. Data flow based test adequacy criteria. White box based testing tools. Mutation testing and testing tools. Relationship between test adequacy criteria. Finite state machine based testing. Static and dynamic program slicing for testing and debugging. Software reliability. Formal verification of program correctness.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6368": {
        "Title": "Telecommunication Network Management",
        "Description": "In-depth study of network management issues and standards in telecommunication networks. OSI management protocols including CMIP, CMISE, SNMP, and MIB. ITU's TMN (Telecommunication Management Network) standards, TMN functional architecture and information architecture. NMF (Network Management Forum) and service management, service modeling and network management API. Issues of telecommunication network management in distributed processing environment.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6371": {
        "Title": "Advanced Programming Languages",
        "Description": "Functional programming, Lambda calculus, logic programming, abstract syntax, denotational semantics of imperative languages, fixpoints semantics, verification of programs, partial evaluation, interpretation and automatic compilation, axiomatic semantics, applications of semantics to software engineering.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6373": {
        "Title": "Intelligent Systems",
        "Description": "Logical formalizations of knowledge for the purpose of implementing intelligent systems that can reason in a way that mimics human reasoning. Topics include: syntax and semantics of common logic, description logic, modal epistemic logic; reasoning about uncertainties, beliefs, defaults and counterfactuals; reasoning within contexts; implementations of knowledge base and textual inference reasoning systems; and applications.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6374": {
        "Title": "Computational Logic",
        "Description": "Deductive, inductive and abductive reasoning, logic-based knowledge representation and reasoning. Logic programming, constraint programming, and the Prolog language. Non-monotonic reasoning, answer set programming, and automating common sense reasoning. Applications of the above.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6375": {
        "Title": "Machine Learning",
        "Description": "Algorithms for training perceptions and multi-layer neural nets: back propagation, Boltzmann machines, and self-organizing nets. The ID3 and the Nearest Neighbor algorithms. Formal models for analyzing learnability: exact identification in the limit and probably approximately correct (PAC) identification. Computational limitations of learning machines.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6376": {
        "Title": "Parallel Processing",
        "Description": "Topics include parallel processing, parallel machine models, parallel algorithms for sorting, searching and matrix operations. Parallel graph algorithms.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6377": {
        "Title": "Introduction to Cryptography",
        "Description": "This course covers the basic aspects of modern cryptography, including block ciphers, pseudorandom functions, symmetric encryption, Hash functions, message authentication, number-theoretic primitives, public-key encryption, digital signatures and zero knowledge proofs.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6378": {
        "Title": "Advanced Operating Systems",
        "Description": "Concurrent processing, inter-process communication, process synchronization, deadlocks, introduction to queuing theory and operational analysis, topics in distributed systems and algorithms, checkpointing, recovery, multiprocessor operating systems. Must have knowledge of C, UNIX, and Socket Programming.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6380": {
        "Title": "Distributed Computing",
        "Description": "Topics include distributed algorithms, election algorithms, synchronizers, mutual exclusion, resource allocation, deadlocks, Byzantine agreement and clock synchronization, knowledge and common knowledge, reliability in distributed networks, and proving distributed programs correct.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6381": {
        "Title": "Combinatorics and Graph Algorithms",
        "Description": "Fundamentals of combinatorics and graph theory. Combinatorial optimization, optimization algorithms for graphs (max flow, shortest routes, Euler tour, Hamiltonian tour).",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6382": {
        "Title": "Theory of Computation",
        "Description": "Formal models of computation. Recursive function theory. Undecidability and incompleteness. Selected topics in theory of computation. Instructor consent required.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6384": {
        "Title": "Computer Vision",
        "Description": "Algorithms for extracting information from digital pictures. Particular topics include: analysis of motion in time varying image sequences, recovering depth from a pair of stereo images, image separation, recovering shape from textured images and shadows, object matching techniques, model based recognition, and the Hough transform.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6385": {
        "Title": "Algorithmic Aspects of Telecommunication Networks",
        "Description": "This is an advanced course on topics related to the design, analysis, and development of telecommunications systems and networks. The focus is on the efficient algorithmic solutions for key problems in modern telecommunications networks, in centralized and distributed models. Topics include: main concepts in the design of distributed algorithms in synchronous and asynchronous models, analysis techniques for distributed algorithms, centralized and distributed solutions for handling design and optimization problems concerning network topology, architecture, routing, survivability, reliability, congestion, dimensioning and traffic management in modern telecommunication networks.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6386": {
        "Title": "Telecommunication Software Design",
        "Description": "Programming with sockets and remote procedure calls, real time programming concepts and strategies. Operating system design for real time systems. Encryption, file compression, and implementation of fire walls. An in-depth study of TCP/IP implementation. Introduction to discrete event simulation of networks.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6390": {
        "Title": "Advanced Computer Networks",
        "Description": "Survey of recent advancements in high-speed network technologies. Application of quantitative approach to the study of broadband integrated networks including admission control, access control, and quality of service guarantee.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6391": {
        "Title": "Optical Networks",
        "Description": "Enabling technologies for optical networks. Wavelength-division multiplexing. Broadcast-and-select optical networks. Wavelength-routed optical networks. Virtual topology design. Routing and wavelength assignment. Network control and management. Protection and restoration. Wavelength conversion. Traffic grooming. Photonic packet switching. Optical burst switching. Survey of recent advances in optical networking.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6392": {
        "Title": "Mobile Computing Systems",
        "Description": "Topics include coping with mobility of computing systems, data management, reliability issues, packet transmission, mobile IP, end-to-end reliable communication, channel and other resource allocation, slot assignment, routing protocols, and issues in mobile wireless networks (without base stations).",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6396": {
        "Title": "Real-Time Systems",
        "Description": "Introduction to real-time applications and concepts. Real-time operating systems and resource management. Specification and design methods for real-time systems. System performance analysis and optimization techniques. Project to specify, analyze, design, implement and test small real-time system.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6397": {
        "Title": "Synthesis and Optimization of High-Performance Systems",
        "Description": "A comprehensive study of high-level synthesis and optimization algorithms for designing high performance systems with multiple CPUs or functional units for critical applications such as Multimedia, Signal processing, Telecommunications, Networks, and Graphics applications, etc. Topics including algorithms for architecture-level synthesis, scheduling, resource binding, real-time systems, parallel processor array design and mapping, code generations for DSP processors, embedded systems and hardware/software codesigns.",
        "Hours": "3",
        "Year": "2022"
    },
    "CS 6V81": {
        "Title": "Independent Study in Computer Science",
        "Description": "May be repeated for credit.",
        "Hours": "1-9",
        "Year": "2022"
    },
    "CS 6V98": {
        "Title": "Thesis",
        "Description": "Pass/Fail only. May be repeated for credit. Instructor consent required.",
        "Hours": "3-9",
        "Year": "2022"
    },
    "SE 6357": {
        "Title": "Software Quality Assurance and Metrics",
        "Description": "Concepts of the pervasive system attributes: reliability, efficiency, maintainability, reusability, etc. Software complexity and measures. Software process measures, product measures and resource measure. Validation of software measures. Software measures and measurement theory. Measuring, monitoring and controlling reliability. Supporting tools.",
        "Hours": "3",
        "Year": "2019"
    },
    "SE 6389": {
        "Title": "Formal Methods and Programming Methodology",
        "Description": "Formal techniques for building highly reliable systems. Use of abstractions for concisely and precisely defining system behavior. Formal logic and proof techniques for verifying the correctness of programs. Hierarchies of abstractions, state transition models, Petri Nets, communicating processes. Operational and definitional specification languages. Applications to reliability-critical, safety-critical, and mission-critical systems, ranging from commercial computer communication systems to strategic command control systems.",
        "Hours": "3",
        "Year": "2019"
    },
    "SE 6V98": {
        "Title": "Thesis",
        "Description": "Pass/Fail only. May be repeated for credit.",
        "Hours": "3-9",
        "Year": "2019"
    },
    "CS 5301": {
        "Title": "Professional and Technical Communication",
        "Description": "This course utilizes an integrated approach to writing and speaking for the technical professions. The advanced writing components of the course focus on writing professional quality technical documents such as proposals, memos, abstracts, reports, letters, emails, etc. The advanced oral communication components of the course focus on planning, developing, and delivering dynamic, informative and persuasive presentations. Advanced skills in effective teamwork, leadership, listening, multimedia and computer generated visual aids are also emphasized. Graduate students will have a successful communication experience working in a functional team environment using a real time, online learning environment.",
        "Hours": "3",
        "Year": "2019"
    },
    "CS 5336": {
        "Title": "Programming Projects in Java",
        "Description": "Overview of the object-oriented philosophy. Implementation of object-oriented designs using the Java programming environment. Emphasis on using the browser to access and extend the Java class library.",
        "Hours": "3",
        "Year": "2019"
    },
    "CS 5V71": {
        "Title": "Cooperative Education",
        "Description": "Placement in a faculty-supervised work environment in industry or government. Sites may be local or out-of-state. The cooperative education program provides exposure to a professional working environment, application of theory to working realities, and an opportunity to test skills and clarify goals. Experience gained may also serve as a work credential after graduation. May be repeated for credit (9 semester credit hours maximum).",
        "Hours": "1-3",
        "Year": "2019"
    },
    "CS 6325": {
        "Title": "Introduction to Bioinformatics",
        "Description": "The course provides a broad overview of the bioinformatics field. Comprehensive introduction to molecular biology and molecular genetics for a program of study in bioinformatics. Discussion of elementary computer algorithms in biology (e.g., sequence alignment and gene finding). Biological databases, data analysis and management.",
        "Hours": "3",
        "Year": "2019"
    },
    "CS 6333": {
        "Title": "Algorithms in Computational Biology",
        "Description": "The principles of algorithm design for biological datasets, and analysis of influential problems and techniques. Biological sequence analysis, gene finding, RNA folding, protein folding, sequence alignment, genome assembly, comparative genomics, phylogenetics, clustering algorithms.",
        "Hours": "3",
        "Year": "2019"
    },
    "CS 6365": {
        "Title": "Data and Text Mining for Computational Biology",
        "Description": "The course introduces data and text mining as practiced currently in the bioinformatics field. Major topics include: sequence alignment for determining similarity between proteins and genes; properties of similarities and distances; genomic, proteomic, and text databases in the real world; finding patterns (motifs) in genes and proteins; differentiating between valid patterns and noise; classification; clustering and its application to phylogenetic trees; and selected topics from text mining.",
        "Hours": "3",
        "Year": "2019"
    },
    "CS 6369": {
        "Title": "Complexity of Combinatorial Algorithms",
        "Description": "Topics include bounded reducibility and completeness, approximation algorithms and heuristics for NP-hard problems, randomized algorithms, and additional complexity classes.",
        "Hours": "3",
        "Year": "2019"
    },
    "CS 6379": {
        "Title": "Biological Database Systems and Data Mining",
        "Description": "Relational data models and database management systems; theories and techniques of constructing relational databases to store biological data, including sequences, structures, genetic linkages and maps, and signal pathways. Introduction to a relational database query language (SQL) with emphasis on answering biologically important questions. Summary of current biological databases. Data integration from various sources and security. Novel data mining methods in bioinformatics with an emphasis on protein structure prediction, homology search, genomic sequence analysis, gene finding and gene mapping. Future directions for biological database development.",
        "Hours": "3",
        "Year": "2019"
    },
    "CS 6383": {
        "Title": "Computational Systems Biology",
        "Description": "The course will provide a system-level understanding of biological systems by analyzing biological data using computational techniques. The major topics include: computational inference of biological networks (regulatory, protein interactions, and metabolic) and the effects of biological networks in cellular processes, development, and disease.",
        "Hours": "3",
        "Year": "2019"
    },
    "CS 6393": {
        "Title": "Advanced Algorithms in Biology",
        "Description": "Recent advanced topics in algorithms in biology will be discussed. Topics will be chosen from: sorting and transformational operations on strings and permutations, structural analysis of proteins, pooling design and nonadaptive group testing, approximation algorithms, and complexity issues.",
        "Hours": "3",
        "Year": "2019"
    },
    "CS 6395": {
        "Title": "Speech Recognition, Synthesis, and Understanding",
        "Description": "Basic speech processing techniques: isolated word recognition using dynamic time warping, acoustic modeling using hidden Markov models, statistical language modeling, search algorithms in large vocabulary continuous speech recognition, components in text-to-speech systems, and architecture and components in spoken dialog systems.",
        "Hours": "3",
        "Year": "2019"
    },
    "CS 6398": {
        "Title": "DSP Architectures",
        "Description": "Typical DSP algorithms, representation of DSP algorithms, data-graph, FIR filters, convolutions, Fast Fourier Transform, Discrete Cosine Transform, low power design, VLSI implementation of DSP algorithms, implementation of DSP algorithms on DSP processors, DSP applications including wireless communication and multimedia.",
        "Hours": "3",
        "Year": "2019"
    },
    "CS 6399": {
        "Title": "Parallel Architectures and Systems",
        "Description": "A comprehensive study of the fundamentals of parallel systems and architecture. Topics including parallel programming environment, fine-grain parallelism such as VLIW and superscalar, parallel computing paradigm of shared-memory, distributed-memory, data-parallel and data-flow models, cache coherence, compiling techniques to improve parallelism, scheduling theory, loop transformations, loop parallelizations and run-time systems.",
        "Hours": "3",
        "Year": "2019"
    },
    "SE 6359": {
        "Title": "Object-Oriented Analysis and Design",
        "Description": "Analysis and practice of modern tools and concepts that can help produce software that is tolerant of change. Consideration of the primary tools of encapsulation and inheritance. Construction of software-ICs which show the parallel with hardware construction.",
        "Hours": "3",
        "Year": "2016"
    },
    "SE 6360": {
        "Title": "Database Design",
        "Description": "Methods, principles, and concepts that are relevant to the practice of database software design. Database system architecture; conceptual database models; relational and object-oriented databases; database system implementation; query processing and optimization; transaction processing concepts, concurrency, and recovery; security.",
        "Hours": "3",
        "Year": "2016"
    },
    "CS 5354": {
        "Title": "Software Engineering",
        "Description": "Formal specification and program verification. Software life-cycle models and their stages. System and software requirements engineering; user-interface design. Software architecture, design, and analysis. Software testing, validation, and quality assurance.",
        "Hours": "3",
        "Year": "2016"
    },
    "CS 6316": {
        "Title": "Agile Methods",
        "Description": "The course addresses what agile methods are, how they are implemented (correctly), and their impact on software engineering. A variety of agile methods are described with a focus on Scrum. Issues associated with planning and controlling agile projects, along with the challenges associated with adopting agile methods are discussed.",
        "Hours": "3",
        "Year": "2016"
    },
    "CS 6329": {
        "Title": "Object-Oriented Software Engineering",
        "Description": "Concepts, methods and techniques necessary to efficiently capture software requirements in use cases and transform them into design and implementation. Use of UML in the context of an iterative, agile process with an OO model transformation approach. Use of an advanced CASE tool that allows the synchronization between the various models and the code.",
        "Hours": "3",
        "Year": "2016"
    },
    "CS 6354": {
        "Title": "Advanced Software Engineering",
        "Description": "This course covers advanced theoretical concepts in software engineering and provides an extensive hands-on experience in dealing with various issues of software development. It involves a semester-long group software development project spanning software project planning and management, analysis of requirements, construction of software architecture and design, implementation, and quality assessment. The course will introduce formal specification, component-based software engineering, and software maintenance and evolution. Must have knowledge of Java.",
        "Hours": "3",
        "Year": "2016"
    },
    "CS 6362": {
        "Title": "Advanced Software Architecture and Design",
        "Description": "Concepts and methodologies for the development, evolution, and reuse of software architecture and design, with an emphasis on object-orientation. Identification, analysis, and synthesis of system data, process, communication, and control components. Decomposition, assignment, and composition of functionality to design elements and connectors. Use of non-functional requirements for analyzing trade-offs and selecting among design alternatives. Transition from requirements to software architecture, design, and to implementation. State of the practice and art.",
        "Hours": "3",
        "Year": "2016"
    },
    "CS 6387": {
        "Title": "Advanced Software Engineering Project",
        "Description": "This course is intended to provide experience in a group project that requires advanced technical solutions, such as distributed multi-tier architectures, component-based technologies, automated software engineering, etc., for developing applications, such as web-based systems, knowledge-based systems, real-time systems, etc. The students will develop and maintain requirements, architecture and detailed design, implementation, and testing and their traceability relationships. Best practices in software engineering will be applied.",
        "Hours": "3",
        "Year": "2016"
    },
    "CS 6388": {
        "Title": "Software Project Planning and Management",
        "Description": "Techniques and disciplines for successful management of software projects. Project planning and contracts. Advanced cost estimation models. Risk management process and activities. Advanced scheduling techniques. Definition, management, and optimization of software engineering processes. Statistical process control. Software configuration management. Capability Maturity Model Integration (CMMI).",
        "Hours": "3",
        "Year": "2016"
    },
    "CS 6389": {
        "Title": "Formal Methods and Programming Methodology",
        "Description": "Formal techniques for building highly reliable systems. Use of abstractions for concisely and precisely defining system behavior. Formal logic and proof techniques for verifying the correctness of programs. Hierarchies of abstractions, state transition models, Petri Nets, communicating processes. Operational and definitional specification languages. Applications to reliability-critical, safety-critical, and mission-critical systems, ranging from commercial computer communication systems to strategic command control systems.",
        "Hours": "3",
        "Year": "2016"
    },
    "CS 6394": {
        "Title": "Digital Telephony",
        "Description": "Introduction and overview emphasizing the advantages of digital voice networks. Voice digitization. Digital transmission, multiplexing, and switching. Rearrangeable switching networks. Digital modulation for radio systems. Network operation issues: synchronization, control; integration of voice and data, packet switching and traffic analysis.",
        "Hours": "3",
        "Year": "2013"
    }
}