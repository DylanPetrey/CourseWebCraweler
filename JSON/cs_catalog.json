{
    "CS 1134": {
        "Description": "Laboratory course to accompany CS 1334. This course assists students in experiencing elementary programming in a high-level language. May not be used to satisfy degree requirements for majors in the School of Engineering and Computer Science. Credit can not be received for both courses, CS 1134 and CS 1136. Lab fee of $ 30 required.",
        "Hours": "1",
        "Title": "Computer Science Laboratory",
        "Year": "2022"
    },
    "CS 1136": {
        "Description": "Laboratory course to accompany CS 1336. This course assists students in experiencing elementary programming in a high-level language. Lab fee of $ 30 required.",
        "Hours": "1",
        "Title": "Computer Science Laboratory",
        "Year": "2022"
    },
    "CS 1200": {
        "Description": "Introduction to the computing professions; overview of Computer Science (CS) and Software Engineering (SE) curricula, connections with Computer Engineering, other Engineering and Computer Science fields, and Arts and Technology programs; problem solving and other skills needed to succeed as a CS or SE major. Introduction to quantitative methods; team projects designed to replicate decision processes and problem solving in real-world situations; additional preparatory topics for CS and SE majors. BMEN 1100 or CE 1100 or EE 1100 or MECH 1100 can substitute for this course (together with 1 hour of CS elective). Credit can not be received for more than one of the following: BMEN 1100 or CE 1100 or CS 1200 or EE 1100 or MECH 1100.",
        "Hours": "2",
        "Title": "Introduction to Computer Science and Software Engineering",
        "Year": "2022"
    },
    "CS 1324": {
        "Description": "Computer programming in a high-level, block structured language with a focus on engineering applications in medicine. Basic data types and variables, memory usage, control structures, functions/procedures and parameter passing, recursion, input/output. Programming projects related to biomedical engineering applications. May not be used to satisfy degree requirements for majors in Computer Engineering, Computer Science, and Software Engineering.",
        "Hours": "3",
        "Title": "Introduction to Programming for Biomedical Engineers",
        "Year": "2022"
    },
    "CS 1325": {
        "Description": "Computer programming in a high-level, block structured language. Basic data types and variables, memory usage, control structures, functions/procedures and parameter passing, recursion, input/output. Programming assignments related to engineering applications, numerical methods. May not be used to satisfy degree requirements for majors in Computer Engineering, Computer Science, and Software Engineering.",
        "Hours": "3",
        "Title": "Introduction to Programming",
        "Year": "2022"
    },
    "CS 1334": {
        "Description": "Introduction to computers. Primitive data types, variable declarations, variable scope, and primitive operations. Control statements. Methods/functions. Arrays and strings using primitive data arrays. Output formatting. Debugging techniques. Designed for students with no prior computer programming experience. May not be used to satisfy degree requirements for majors in the School of Engineering and Computer Science. Credit can not be received for both courses, CS 1334 and CS 1336. Note that a grade of C or better is required in order to register for CS 1335.",
        "Hours": "3",
        "Title": "Programming Fundamentals for Non-Majors",
        "Year": "2022"
    },
    "CS 1335": {
        "Description": "Introduction to object-oriented software analysis, design, and development. Classes and objects. Object composition and polymorphism. Sorting and searching. Strings using core classes. Inheritance and interfaces. Graphical User Interfaces. May not be used to satisfy degree requirements for majors in the School of Engineering and Computer Science, especially majors in Computer Science and Engineering. Credit can not be received for both courses, CS 1335 and (CE 1337 or CS 1337).",
        "Hours": "3",
        "Title": "Computer Science I for Non-majors",
        "Year": "2022"
    },
    "CS 1336": {
        "Description": "Introduces the fundamental concepts of structured programming. Topics include software development methodology, data types, control structures, functions, arrays, and the mechanics of running, testing, and debugging. Programming language of choice is C. The class is open to students in the School of Engineering and Computer Science only. Note that a grade of C- or better in this class is required in order to register for (CS 1324 or CS 1325); a grade of C or better in this class is required to register for (CE 1337 or CS 1337).",
        "Hours": "3",
        "Title": "Programming Fundamentals",
        "Year": "2022"
    },
    "CS 1337": {
        "Description": "Review of control structures and data types with emphasis on structured data types. Applies the object-oriented programming paradigm, focusing on the definition and use of classes along with the fundamentals of object-oriented design. Includes basic analysis of algorithms, searching and sorting techniques, and an introduction to software engineering. Programming language of choice is C/C++. Students will also be registered for an exam section.",
        "Hours": "3",
        "Title": "Computer Science I",
        "Year": "2022"
    },
    "CS 2305": {
        "Description": "Principles of counting. Boolean operations. Logic and proof methods. Recurrence relations. Sets, relations, functions. Elementary graph theory. Elementary number theory.",
        "Hours": "3",
        "Title": "Discrete Mathematics for Computing I",
        "Year": "2022"
    },
    "CS 2335": {
        "Description": "Exceptions and number formatting. File input/output using Stream classes. Implementation of primitive data structures, including linked lists, stacks, queues, and binary trees. Advanced data manipulation using core classes. May not be used to satisfy degree requirements for majors in the School of Engineering and Computer Science. Credit can not be received for both courses, CS 2335 and (CE 2336 or CS 2336 or CS 2337).",
        "Hours": "3",
        "Title": "Computer Science II for Non-majors",
        "Year": "2022"
    },
    "CS 2336": {
        "Description": "Further applications of programming techniques, introducing the fundamental concepts of data structures and algorithms. Topics include recursion, fundamental data structures (including stacks, queues, linked lists, hash tables, trees, and graphs), and algorithmic analysis. Includes comprehensive programming projects. Programming language of choice is Java. Credit can not be received for both CS 2337 and (CS 2336 or CE 2336).",
        "Hours": "3",
        "Title": "Computer Science II",
        "Year": "2022"
    },
    "CS 2337": {
        "Description": "Further applications of programming techniques, introducing the fundamental concepts of data structures and algorithms. Topics include recursion, fundamental data structures (including stacks, queues, linked lists, hash tables, trees, and graphs), and algorithmic analysis. Includes comprehensive programming projects. Programming language of choice is C++. Credit can not be received for both CS 2337 and (CS 2336 or CE 2336).",
        "Hours": "3",
        "Title": "Computer Science II",
        "Year": "2022"
    },
    "CS 2340": {
        "Description": "This course introduces the concepts of computer architecture by going through multiple levels of abstraction, and the numbering systems and their basic computations. It focuses on the instruction-set architecture of the MIPS machine, including MIPS assembly programming, translation between MIPS and C, and between MIPS and machine code. General topics include performance calculation, processor datapath, pipelining, and memory hierarchy. Credit can not be received for both courses, (CS 2340 or SE 2340) and (CE 4304 or EE 4304).",
        "Hours": "3",
        "Title": "Computer Architecture",
        "Year": "2022"
    },
    "CS 2V95": {
        "Description": "Individual study under a faculty member's direction. May be repeated for credit as topics vary (6 semester credit hours maximum). Additional prerequisites may be required depending on the specific course topic. Instructor consent required.",
        "Hours": "1-6",
        "Title": "Individual Instruction in Computer Science",
        "Year": "2022"
    },
    "CS 3149": {
        "Description": "In this course, students will work together in small teams to solve graduated problems, similar to those used in programming contests around the world. Approaches to categorizing problems and selecting appropriate data structures and algorithms will be covered, along with types of algorithms for solving problems (brute force, greedy, divide and conquer, dynamic programming). Students will do problem solving in a competitive environment against the clock. May be repeated for credit as topics vary (3 semester credit hours maximum).",
        "Hours": "1",
        "Title": "Competitive Learning in Computer Science",
        "Year": "2022"
    },
    "CS 3162": {
        "Description": "Professional and ethical responsibilities of computer scientists and software engineers as influenced by growth in computer use and networks. Costs and benefits of computer technology. Risks and liabilities of safety-critical systems. Social implications of the Internet. Interaction between human values and technical decisions involving computing. Intellectual Property. Global impact of computing.",
        "Hours": "1",
        "Title": "Professional Responsibility in Computer Science and Software Engineering",
        "Year": "2022"
    },
    "CS 3305": {
        "Description": "Advanced counting methods; recurrence relations, divide and conquer algorithms, principle of inclusion and exclusion. Partial orders and lattices, Algorithmic complexity. Graph theory. Strings and languages. Number theory. Elements of modern algebra. Credit can not be received for both courses, CS 3305 and SE 3306. Double majors are required to take CS 3305.",
        "Hours": "3",
        "Title": "Discrete Mathematics for Computing II",
        "Year": "2022"
    },
    "CS 3333": {
        "Description": "Programming with basic data structures (arrays, stacks, queues, lists, and trees) and their associated algorithms. Various sorting and searching techniques. Fundamental graph algorithms. This course covers much of the same material as CS 3345 without requiring the analysis of algorithms. May not be used to satisfy degree requirements for majors in Computer Science. Credit can not be received for both courses, (CE 2336 or CS 2336 or CS 2337) and CS 3333.",
        "Hours": "3",
        "Title": "Data Structures",
        "Year": "2022"
    },
    "CS 3335": {
        "Description": "Numerous programming projects in both C and C++. All fundamentals of C, with special emphasis on use of pointers. Use of C++ extensions to create and extend (by inheritance) abstract data types. The use/advantages of virtual functions (dynamic polymorphism).",
        "Hours": "3",
        "Title": "C and C++",
        "Year": "2019"
    },
    "CS 3340": {
        "Description": "This course introduces the concepts of computer architecture by going through multiple levels of abstraction, and the numbering systems and their basic computations. It focuses on the instruction-set architecture of the MIPS machine, including MIPS assembly programming, translation between MIPS and C, and between MIPS and machine code. General topics include performance calculation, processor datapath, pipelining, and memory hierarchy. Credit can not be received for both courses, (CS 3340 or SE 3340 or TE 3340) and (CE 4304 or EE 4304).",
        "Hours": "3",
        "Title": "Computer Architecture",
        "Year": "2019"
    },
    "CS 3341": {
        "Description": "Axiomatic probability theory, independence, conditional probability. Discrete and continuous random variables, special distributions of importance to CS/SE, and expectation. Simulation of random variables and Monte Carlo methods. Central limit theorem. Basic statistical inference, parameter estimation, hypothesis testing, and linear regression. Introduction to stochastic processes. Illustrative examples and simulation exercises from queuing, reliability, and other CS/SE applications. Credit can not be received for both courses, (CS 3341 or SE 3341 or STAT 3341) and ENGR 3341.",
        "Hours": "3",
        "Title": "Probability and Statistics in Computer Science and Software Engineering",
        "Year": "2022"
    },
    "CS 3345": {
        "Description": "Analysis of algorithms including time complexity and Big-O notation. Analysis of stacks, queues, and trees, including B-trees. Heaps, hashing, and advanced sorting techniques. Disjoint sets and graphs. Course emphasizes design and implementation.",
        "Hours": "3",
        "Title": "Data Structures and Introduction to Algorithmic Analysis",
        "Year": "2022"
    },
    "CS 3354": {
        "Description": "Introduction to software life cycle models. Software requirements engineering, formal specification and validation. Techniques for software design and testing. Cost estimation models. Issues in software quality assurance and software maintenance.",
        "Hours": "3",
        "Title": "Software Engineering",
        "Year": "2022"
    },
    "CS 3360": {
        "Description": "Device and logical coordinate systems, and the nature of raster display. Algorithms for basic 2-D drawing primitives, such as line-drawing, clipping and Bezier curves. Perspectives in 3-D, and hidden-face elimination, such as Painter's and Z-Buffer algorithms. Color and texture. Fractals and the Mandelbrot set. May not be used to satisfy degree requirements for majors in the School of Engineering and Computer Science.",
        "Hours": "3",
        "Title": "Computer Graphics for Artists and Designers",
        "Year": "2022"
    },
    "CS 3376": {
        "Description": "Advanced programming techniques utilizing procedural and object oriented programming in a UNIX environment. Topics include basic UNIX concepts, file input and output, implementation of strings, and dynamic memory allocation/management. Design and implementation of a comprehensive programming project is required.",
        "Hours": "3",
        "Title": "C/C++ Programming in a UNIX Environment",
        "Year": "2016"
    },
    "CS 3377": {
        "Description": "Basic UNIX concepts, commands and utilities, organization of UNIX file system including links and access control, creating and managing UNIX processes and threads, implementing algorithms using shell scripts, basic networking concepts including socket and client-server programming, inter-process communication using pipes and signals, using a version control system to manage work, and introduction to cloud computing. Design and implementation of a comprehensive programming project is required.",
        "Hours": "3",
        "Title": "Systems Programming in UNIX and Other Environments",
        "Year": "2022"
    },
    "CS 3385": {
        "Description": "Issues of professional ethics; computer crime; wiretapping and encryption; protecting software and other intellectual property; privacy and information; careers and computers; reliability and safety; constitutional issues. Broader issues on the impact and control of computers.",
        "Hours": "3",
        "Title": "Ethics, Law, Society, and Computing",
        "Year": "2022"
    },
    "CS 3V95": {
        "Description": "Subject matter will vary from semester to semester. May be repeated for credit as topics vary (9 semester credit hours maximum). Additional prerequisites may be required depending on the specific course topic. Instructor consent required.",
        "Hours": "1-9",
        "Title": "Undergraduate Topics in Computer Science",
        "Year": "2022"
    },
    "CS 4141": {
        "Description": "Laboratory to accompany CS 4341. The purpose of this laboratory is to give students an intuitive understanding of digital circuits and systems. Laboratory exercises include construction of simple digital logic circuits using prototyping kits and board-level assembly of a personal computer. Lab fee of $ 30 required.",
        "Hours": "1",
        "Title": "Digital Systems Laboratory",
        "Year": "2022"
    },
    "CS 4301": {
        "Description": "May be repeated for credit as topics vary (9 semester credit hours maximum).",
        "Hours": "3",
        "Title": "Special Topics in Computer Science",
        "Year": "2022"
    },
    "CS 4313": {
        "Description": "Advanced matrix calculus and vector calculus-based probability theory with applications to problems in machine learning and artificial neural network modeling. Intended to provide mathematics preparation for CGS 4314 or CS 4314 and CGS 4315 or CS 4315. Includes introduction to gradient descent type unsupervised, supervised, and reinforcement learning algorithms as well as iterative constraint satisfaction algorithms.",
        "Hours": "3",
        "Title": "Neural Net Mathematics",
        "Year": "2019"
    },
    "CS 4314": {
        "Description": "This advanced machine learning course covers mathematics essential for the analysis and design covers mathematics essential for the analysis and design of unsupervised, supervised, and reinforcement machine learning algorithms including deep learning neural network models formulated within a statistical empirical risk minimization framework. Course topics include: advanced vector and matrix calculus and stochastic sequences of mixed random vectors and Bayesian nets. Unsupervised, supervised and reinforcement machine learning applications are emphasized through the course.",
        "Hours": "3",
        "Title": "Intelligent Systems Analysis",
        "Year": "2022"
    },
    "CS 4315": {
        "Description": "This advanced machine learning course covers mathematics essential for the analysis and design of unsupervised, supervised, and reinforcement machine learning algorithms including deep learning neural network models formulated within a statistical empirical risk minimization framework. Topics include: convergence analysis of adaptive and batch learning algorithms, Bayes Nets and Marko fields, Monte Carlo Markov Chain inference algorithms, bootstrap sampling methods, and the statistical analysis of generalization performance. Unsupervised, supervised, and reinforcement machine learning applications are emphasized throughout the course.",
        "Hours": "3",
        "Title": "Intelligent Systems Design",
        "Year": "2022"
    },
    "CS 4332": {
        "Description": "Video game programming concepts. Programming with game engine. 2D and 3D computer graphics techniques and data structures. Computer animation, physics-based methods and collision detection. GPU and shader programming. Artificial intelligence for video games. Networking and multiplayer.",
        "Hours": "3",
        "Title": "Introduction to Programming Video Games",
        "Year": "2022"
    },
    "CS 4334": {
        "Description": "Solution of linear equations, roots of polynomial equations, interpolation and approximation, numerical differentiation and integration, solution of ordinary differential equations, computer arithmetic, and error analysis.",
        "Hours": "3",
        "Title": "Numerical Analysis",
        "Year": "2022"
    },
    "CS 4336": {
        "Description": "Advanced Java programming techniques for enterprise application development. Covers Java Enterprise API's for working with databases, web servers, and application servers. Students will create multi-tiered web applications and web services integrated with a database.",
        "Hours": "3",
        "Title": "Advanced Java",
        "Year": "2022"
    },
    "CS 4337": {
        "Description": "Principles of design and implementation of contemporary programming languages. Formal description including specification of syntax and semantics of programming languages. Language definition structures including binding, scoping, data types, control structures, parameter passing, abstraction mechanism, and run-time considerations. Design issues of different programming languages. Language-based security. Design, implement, and debug programs in various programming language paradigms.",
        "Hours": "3",
        "Title": "Programming Language Paradigms",
        "Year": "2022"
    },
    "CS 4341": {
        "Description": "Boolean algebra and logic circuits; synchronous sequential circuits; gate level design of ALSU, registers, and memory unit; register transfer operations; design of data path and control unit for a small computer; Input-Output interface. Credit can not be received for both courses, CS 4341 and (CE 3320 or EE 3320).",
        "Hours": "3",
        "Title": "Digital Logic and Computer Design",
        "Year": "2022"
    },
    "CS 4347": {
        "Description": "This course emphasizes the concepts and structures necessary for the design and implementation of database management systems. Topics include data models, data normalization, data description languages, query facilities, file organization, index organization, file security, data integrity, and reliability.",
        "Hours": "3",
        "Title": "Database Systems",
        "Year": "2022"
    },
    "CS 4348": {
        "Description": "An introduction to fundamental concepts in operating systems: their design, implementation, and usage. Topics include process management, main memory management, virtual memory, I/O and device drivers, file systems, secondary storage management, and an introduction to critical sections and deadlocks.",
        "Hours": "3",
        "Title": "Operating Systems Concepts",
        "Year": "2022"
    },
    "CS 4349": {
        "Description": "Asymptomatic analysis, recurrences, and graph algorithms. Algorithm design techniques such as greedy method, dynamic programming, and divide-and-conquer. Issues from computational complexity. Course emphasizes a theoretical approach.",
        "Hours": "3",
        "Title": "Advanced Algorithm Design and Analysis",
        "Year": "2022"
    },
    "CS 4352": {
        "Description": "Broad overview of how human-computer interaction (HCI) informs the user-centered design (UCD) process. Practical experience in the core methods of user experience design and research throughout the product development cycle. (Same as CGS 4352)",
        "Hours": "3",
        "Title": "Human-Computer Interaction I",
        "Year": "2022"
    },
    "CS 4353": {
        "Description": "Exploration of advanced topics in human-computer interaction (HCI) in both research and industry. Practical experience with latent methods in user experience (UX) design and research that build upon core methods introduced in CS 4352. Typically used in the design of usable systems.",
        "Hours": "3",
        "Title": "Human-Computer Interaction II",
        "Year": "2022"
    },
    "CS 4361": {
        "Description": "Review of graphic display architecture and graphic input devices. Two- and three-dimensional transformations, matrix formulations, and concatenation. Clipping and windowing. Data structures for graphics systems, segmented display files, rings, etc. Hidden line and surface elimination. Shading. Graphics packages and applications.",
        "Hours": "3",
        "Title": "Computer Graphics",
        "Year": "2022"
    },
    "CS 4365": {
        "Description": "Basic concepts and techniques that enable computers to perform intelligent tasks. Examples are taken from areas such as natural language understanding, computer vision, machine learning, search strategies and control, logic, and theorem proving.",
        "Hours": "3",
        "Title": "Artificial Intelligence",
        "Year": "2022"
    },
    "CS 4371": {
        "Description": "This course focuses on scalable data management and mining algorithms for analyzing very large amounts of data (i.e., Big Data). Included topics are: Mapreduce, NoSQL systems (e.g., key-value stores, column-oriented data stores, stream processing systems), association rule mining, large scale supervised and unsupervised learning, and applications including recommendation systems, web and big data security.",
        "Hours": "3",
        "Title": "Introduction to Big Data Management and Analytics",
        "Year": "2022"
    },
    "CS 4372": {
        "Description": "This course will focus on the application of computational tools to solve machine learning problems. Applicable languages may include Python,' R', Weka, or others at the discretion of the instructor. Students will use these languages to apply machine learning concepts to problem data sets.",
        "Hours": "3",
        "Title": "Computational Methods for Data Scientists",
        "Year": "2022"
    },
    "CS 4375": {
        "Description": "Algorithms for creating computer programs that can improve their performance through learning. Topics include: cross-validation, decision trees, neural nets, statistical tests, Bayesian learning, computational learning theory, instance-based learning, reinforcement learning, bagging, boosting, support vector machines, Hidden Markov Models, clustering, and semi-supervised and unsupervised learning techniques.",
        "Hours": "3",
        "Title": "Introduction to Machine Learning",
        "Year": "2022"
    },
    "CS 4376": {
        "Description": "In-depth study of the features/advantages of object-oriented approach to problem solving. Special emphasis on issues of object-oriented analysis, design, implementation, and testing. Review of basic concepts of object-oriented technology (abstraction, inheritance, and polymorphism). Object-oriented programming languages, databases, and productivity tools.",
        "Hours": "3",
        "Title": "Object-Oriented Design",
        "Year": "2022"
    },
    "CS 4384": {
        "Description": "A review of the abstract notions encountered in machine computation. Deterministic and nondeterministic finite automata; regular expressions, regular sets, context-free grammars, pushdown automata, context-free languages. Selected topics from Turing Machines and undecidability.",
        "Hours": "3",
        "Title": "Automata Theory",
        "Year": "2022"
    },
    "CS 4386": {
        "Description": "Basic phases of a compiler and their design principles. Topics include lexical analysis, basic parsing techniques such as LR (K) and LL (K) grammars.",
        "Hours": "3",
        "Title": "Compiler Design",
        "Year": "2022"
    },
    "CS 4389": {
        "Description": "Data as a critical resource. Threats to data and applications security including access control violations, integrity violations, unauthorized intrusions and sabotage; techniques to enforce security.",
        "Hours": "3",
        "Title": "Data and Applications Security",
        "Year": "2022"
    },
    "CS 4390": {
        "Description": "The design and analysis of computer networks. Topics include the ISO reference model, transmission media, medium-access protocols, LANs, data link protocols, routing, congestion control, internetworking, and connection management. Credit can not be received for both courses, (CE 4390 or CS 4390) and EE 4390.",
        "Hours": "3",
        "Title": "Computer Networks",
        "Year": "2022"
    },
    "CS 4391": {
        "Description": "Techniques for manipulating and extracting information from digital images and video. Topics include color representations, analysis and processing based on image histograms, geometric transformations, convolutions, image blurring and sharpening, extraction of edges, matching, image and video motion.",
        "Hours": "3",
        "Title": "Introduction to Computer Vision",
        "Year": "2022"
    },
    "CS 4392": {
        "Description": "Introduction to traditional animation. Kinematics of motion. Key framing. Coordinate systems and transformations (review), Euler angles and Quaternions, Catmull Rom and B-Splines, Advanced Key framing, articulated figures (forward kinematics), human and animal modeling (soft tissue, skin, etc.). Facial animation (parametric). Physically based modeling (rigid, collision detection). Physically based modeling (deformable). Behavioral and heuristic models. Algorithmic animation. Optimization techniques. Animation languages and systems. Motion capture and real time control. Virtual reality and animation. Rendering and temporal aliasing. 2D and 3D morphing. 3D modeling.",
        "Hours": "3",
        "Title": "Computer Animation",
        "Year": "2022"
    },
    "CS 4393": {
        "Description": "The study of security and vulnerabilities in computer and network systems. Common attacking techniques such as buffer overflow, viruses, worms, etc. Security in existing systems such as UNIX, Windows, and JVM. Fundamental access control and information flow concepts. Symmetric Ciphers such as DES and AES. Public-key encryption techniques and related number theory. Message authentication, hash functions, and digital signatures. Authentication applications, IP security and Web security.",
        "Hours": "3",
        "Title": "Computer and Network Security",
        "Year": "2022"
    },
    "CS 4394": {
        "Description": "This course focuses on developing systems implementation skills through a set of projects. Each project will explore one fundamental component of operating systems such as process scheduling, memory management, device drivers, file systems, and network communication management. The projects are expected to involve kernel-level programming.",
        "Hours": "3",
        "Title": "Implementation of Modern Operating Systems",
        "Year": "2022"
    },
    "CS 4395": {
        "Description": "Introduction to human language technologies (HLT), the study of natural languages from a computational perspective. Topics include computational models of syntax and semantics, natural language applications (such as machine translation, speech processing, information retrieval, and information extraction), and general machine-learning techniques commonly used in state-of-the-art HLT research.",
        "Hours": "3",
        "Title": "Human Language Technologies",
        "Year": "2022"
    },
    "CS 4396": {
        "Description": "This course takes a lab-oriented approach to demonstrate how basic networking concepts are applied in a real network. The hands-on projects include setting up simple network topologies, configuring devices to run basic network protocols, and using various debugging tools to identify, locate, and fix common problems in networking.",
        "Hours": "3",
        "Title": "Networking Laboratory",
        "Year": "2022"
    },
    "CS 4397": {
        "Description": "Introduction to embedded computer applications and concepts. Real-time operating systems and resource management. Real-time scheduling and communication. Senior data acquisition, processing and fusion. Error handling, fault tolerance, and graceful degradation. System performance analysis and optimization techniques. Includes a project to develop and analyze a small embedded computer application.",
        "Hours": "3",
        "Title": "Embedded Computer Systems",
        "Year": "2022"
    },
    "CS 4398": {
        "Description": "Creating and preserving digital evidence, data recovery and evidence collection algorithms, evidence construction and reconstruction, methods for certifying evidence, storing evidence, data acquisition, forensic analysis algorithms, image files, network forensics, logging methods to trace back attacks and digital trails, e-mail investigations.",
        "Hours": "3",
        "Title": "Digital Forensics",
        "Year": "2022"
    },
    "CS 4399": {
        "Description": "For students conducting independent research for honors theses or projects. Topics may vary. Additional prerequisites may be required depending on the specific course topic. Instructor consent required.",
        "Hours": "3",
        "Title": "Senior Honors in Computer Science",
        "Year": "2022"
    },
    "CS 4475": {
        "Description": "This course is intended to provide hands-on experience in a data science project. Students will work in teams on projects and will be involved in formulating a relevant problem, collecting the requisite data, finding a solution, and developing the necessary computational tools. The deliverables will include a final project report that details these steps and presentation of the project.",
        "Hours": "4",
        "Title": "Capstone Project",
        "Year": "2022"
    },
    "CS 4485": {
        "Description": "This course is intended to complement theory and to provide an in-depth, hands-on experience in all aspects of a software development project. Students will work in teams on projects of interest to industry and will be involved in specifying the problem and its solution, designing and analyzing the solution, developing the software architecture, along with implementation and testing plans. The deliverables will include reports that document these steps as well as a final project report, including the challenges they faced, and a user manual of the developed system. Students will explore security issues of their project and its potential impact on society. Teams will also make presentations as well as demonstrate their software. Additionally, this course will cover topics related to computer science profession including ethics and professional responsibility, entrepreneurship, leadership, and project management.",
        "Hours": "4",
        "Title": "Computer Science Project",
        "Year": "2022"
    },
    "CS 4V95": {
        "Description": "Subject matter will vary from semester to semester. Additional prerequisites may be required depending on the specific course topic. May be used as CS Guided Elective on CS degree plans. May be repeated for credit as topics vary (9 semester credit hours maximum).",
        "Hours": "1-9",
        "Title": "Undergraduate Topics in Computer Science",
        "Year": "2022"
    },
    "CS 4V98": {
        "Description": "Topics will vary from semester to semester. May be repeated for credit as topics vary (9 semester credit hours maximum). Additional prerequisites may be required depending on the specific course topic. Instructor consent required.",
        "Hours": "1-9",
        "Title": "Undergraduate Research in Computer Science",
        "Year": "2022"
    },
    "CS 5301": {
        "Description": "This course utilizes an integrated approach to writing and speaking for the technical professions. The advanced writing components of the course focus on writing professional quality technical documents such as proposals, memos, abstracts, reports, letters, emails, etc. The advanced oral communication components of the course focus on planning, developing, and delivering dynamic, informative and persuasive presentations. Advanced skills in effective teamwork, leadership, listening, multimedia and computer generated visual aids are also emphasized. Graduate students will have a successful communication experience working in a functional team environment using a real time, online learning environment.",
        "Hours": "3",
        "Title": "Professional and Technical Communication",
        "Year": "2019"
    },
    "CS 5302": {
        "Description": "May be repeated for credit as topics vary (6 semester credit hours maximum).",
        "Hours": "3",
        "Title": "Topics in Computer Science",
        "Year": "2022"
    },
    "CS 5303": {
        "Description": "Computer science problem solving. The structure and nature of algorithms and their corresponding computer program implementation. Programming in a high level block-structured language (e.g., PASCAL, Ada, C++, or JAVA). Elementary data structures: arrays, records, linked lists, trees, stacks and queues.",
        "Hours": "3",
        "Title": "Computer Science I",
        "Year": "2022"
    },
    "CS 5330": {
        "Description": "Basic concepts of computer organization: Numbering systems, two's complement notation, multi-level machine concepts, machine language, assembly programming and optimization, subroutine calls, addressing modes, code generation process, CPU datapath, pipelining, RISC, CISC, and performance calculation.",
        "Hours": "3",
        "Title": "Computer Science II",
        "Year": "2022"
    },
    "CS 5333": {
        "Description": "Mathematical foundations of computer science. Logic, sets, relations, graphs and algebraic structures. Combinatorics and metrics for performance evaluation of algorithms.",
        "Hours": "3",
        "Title": "Discrete Structures",
        "Year": "2022"
    },
    "CS 5336": {
        "Description": "Overview of the object-oriented philosophy. Implementation of object-oriented designs using the Java programming environment. Emphasis on using the browser to access and extend the Java class library.",
        "Hours": "3",
        "Title": "Programming Projects in Java",
        "Year": "2019"
    },
    "CS 5343": {
        "Description": "Formal specifications and representation of lists, arrays, trees, graphs, multilinked structures, strings, and recursive pattern structures. Analysis of associated algorithms. Sorting and searching, file structures. Relational data models.",
        "Hours": "3",
        "Title": "Algorithm Analysis and Data Structures",
        "Year": "2022"
    },
    "CS 5348": {
        "Description": "Processes and threads. Concurrency issues including semaphores, monitors and deadlocks. Simple memory management. Virtual memory management. CPU scheduling algorithms. I/O management. File management. Introduction to distributed systems. Must have a working knowledge of C and Unix.",
        "Hours": "3",
        "Title": "Operating Systems Concepts",
        "Year": "2022"
    },
    "CS 5349": {
        "Description": "Deterministic and nondeterministic finite automata; regular expressions, regular sets, context-free grammars, pushdown automata, context free languages. Selected topics from Turing Machines and undecidability.",
        "Hours": "3",
        "Title": "Automata Theory",
        "Year": "2022"
    },
    "CS 5354": {
        "Description": "Formal specification and program verification. Software life-cycle models and their stages. System and software requirements engineering; user-interface design. Software architecture, design, and analysis. Software testing, validation, and quality assurance.",
        "Hours": "3",
        "Title": "Software Engineering",
        "Year": "2016"
    },
    "CS 5375": {
        "Description": "Design and history of the UNIX operating system. Detailed study of process and file system data structures. Shell programming in UNIX. Use of process-forking functionality of UNIX to simplify complex problems. Interprocess communication and coordination. Device drivers and streams as interfaces to hardware features. TCP/IP and other UNIX inter-machine communication facilities. Recommended prerequisite: CS 3335.",
        "Hours": "3",
        "Title": "Principles of UNIX",
        "Year": "2022"
    },
    "CS 5390": {
        "Description": "The design and analysis of protocols for computer networking. Topics include: network protocol design and composition via layering, contention resolution in multi-access networks, routing metrics and optimal path searching, traffic management, global network protocols; dealing with heterogeneity and scalability.",
        "Hours": "3",
        "Title": "Computer Networks",
        "Year": "2022"
    },
    "CS 5V71": {
        "Description": "Placement in a faculty-supervised work environment in industry or government. Sites may be local or out-of-state. The cooperative education program provides exposure to a professional working environment, application of theory to working realities, and an opportunity to test skills and clarify goals. Experience gained may also serve as a work credential after graduation. May be repeated for credit (9 semester credit hours maximum).",
        "Hours": "1-3",
        "Title": "Cooperative Education",
        "Year": "2019"
    },
    "CS 5V81": {
        "Description": "May be repeated as topics vary (9 semester credit hours maximum).",
        "Hours": "1-9",
        "Title": "Special Topics in Computer Science",
        "Year": "2022"
    },
    "CS 6301": {
        "Description": "May be repeated for credit as topics vary.",
        "Hours": "3",
        "Title": "Special Topics in Computer Science",
        "Year": "2022"
    },
    "CS 6302": {
        "Description": "Special Topics in Computer Science for Non-CS/SE Majors.",
        "Hours": "3",
        "Title": "Special Topics in Computer Science",
        "Year": "2022"
    },
    "CS 6303": {
        "Description": "The Cybersecurity Essentials course develops a foundational understanding of cybersecurity as a business risk. This class will help identify threats to an organization and how they relate to cyber security. An in-depth understanding of the different types of cyberattacks, the business systems that are most at risk, and the importance of an organization-wide approach to cybersecurity. This course will also cover the crucial role of leadership in managing cyber risk throughout the entire organization. May not be used to satisfy the degree requirements of the MS CS or the MS SE degree plans.",
        "Hours": "3",
        "Title": "Cyber Security Essentials for Practitioners",
        "Year": "2022"
    },
    "CS 6304": {
        "Description": "Trends in processor, memory, I/O and system design. Techniques for quantitative analysis and evaluation of computer systems to understand and compare alternative design choices in system design. Components in high performance processors and computers: pipelining, instruction level parallelism, memory hierarchies, and input/output. Students will undertake a major computing system analysis and design project. Must have an understanding of C/C++.",
        "Hours": "3",
        "Title": "Computer Architecture",
        "Year": "2022"
    },
    "CS 6305": {
        "Description": "The course will teach principles, tools, and trends for data and application security and privacy. Topics to be covered include: confidentiality, privacy and trust management. Additionally, best practices and policies to promote secure databases, distributed systems, and applications such as social media systems, the cloud, and IoT systems will be covered. In addition, the privacy implications of data analytics and potential solutions will be discussed. Students will assess one system or application to identify potential vulnerabilities and identify possible remediations. The topics include an overview of common and emerging vectors of attack and the best practices for deterring them. May not be used to satisfy degree requirements for the MS CS or the MS SE degree plans.",
        "Hours": "3",
        "Title": "Data Security and Privacy for Practitioners",
        "Year": "2022"
    },
    "CS 6306": {
        "Description": "A supervisory view of security vulnerabilities in information systems, applications and safe computing. Additionally, best practices to promote security standards and applications, management and analysis of security. Applications of data science techniques, preparation for adversarial attacks. May not be used to satisfy degree requirements for the MS CS or the MS SE degree plans.",
        "Hours": "3",
        "Title": "Cyber Security Analytics & Malware Analysis for Practitioners",
        "Year": "2022"
    },
    "CS 6307": {
        "Description": "Database fundamentals including Query Processing, Parallel/Distributed Data Processing, NoSQL systems (e.g., Key-value stores, Column-oriented data stores, MapReduce), Graph Processing, and Recommendation Systems using Big Data technologies. This course can not be used to satisfy the requirements for the MS CS or the MS SE degree plans.",
        "Hours": "3",
        "Title": "Introduction to Big Data Management and Analytics for non CS-Majors",
        "Year": "2022"
    },
    "CS 6308": {
        "Description": "The Stuxnet attack was a wake-up call to improve the security of our critical infrastructures, which include transportation networks, the power grid, and other cyber-physical systems, where computation, communications, and control are tightly integrated. This class covers the security of cyber-physical systems from a multi-disciplinary point of view, from computer science security research (network security and software security), to public policy (e.g., the Executive Order 13636), risk-assessment, business drivers, and control-theoretic methods to reduce the cyber-risk to cyber-physical critical infrastructures. Students are required to participate in several cyber war games. May not be used to satisfy degree requirements for the MS CS or the MS SE degree plans.",
        "Hours": "3",
        "Title": "Cyber Physical Systems and Critical Infrastructure Security for Practitioners",
        "Year": "2022"
    },
    "CS 6313": {
        "Description": "Statistical methods for data science. Statistical Methods are developed at an intermediate level. Sampling distributions. Point and interval estimation. Parametric and nonparametric hypothesis testing. Analysis of variance. Regression, model building and model diagnostics. Monte Carlo simulation and bootstrap. Introduction to a statistical software package.",
        "Hours": "3",
        "Title": "Statistical Methods for Data Science",
        "Year": "2022"
    },
    "CS 6314": {
        "Description": "Advanced understanding of web architecture, standards, protocols, tools, and technologies. Tools required for web programming including HTML, CSS, and JavaScript; XML and database technologies; server-side programming using PHP; Web security protocols and standards; techniques and algorithms related to web services, cloud computing, and semantic web.",
        "Hours": "3",
        "Title": "Web Programming Languages",
        "Year": "2022"
    },
    "CS 6315": {
        "Description": "History and foundations of semantic web. URIs and namespaces; XML and XMLS Datatypes, RDF and RDF/XML, RDFS, and OWL (Lite, DL and Full); applications of semantic web; introduction to OWL 2 features and profiles; design patterns used in the creation of semantic web solutions.",
        "Hours": "3",
        "Title": "Semantic Web",
        "Year": "2022"
    },
    "CS 6316": {
        "Description": "The course addresses what agile methods are, how they are implemented (correctly), and their impact on software engineering. A variety of agile methods are described with a focus on Scrum. Issues associated with planning and controlling agile projects, along with the challenges associated with adopting agile methods are discussed.",
        "Hours": "3",
        "Title": "Agile Methods",
        "Year": "2016"
    },
    "CS 6319": {
        "Description": "This course will cover basic computational geometry topics, such as computing convex hulls, computing Voronoi diagrams and Delaunay triangulations, motion planning, and the main methods for developing geometric algorithms. We will also discuss various geometric data structures for point location and range searching and additional topics at the discretion of the instructor, such as geometric approximation and high dimensional data analysis.",
        "Hours": "3",
        "Title": "Computational Geometry",
        "Year": "2022"
    },
    "CS 6320": {
        "Description": "This course covers state-of-the-art methods for natural language processing. After an introduction to the basics of syntax, semantic, and discourse analysis, the focus shifts to the integration of these modules into natural-language processing systems. In addition to natural language understanding, the course presents advanced material on lexical knowledge acquisition, natural language generation, machine translation, and parallel processing of natural language.",
        "Hours": "3",
        "Title": "Natural Language Processing",
        "Year": "2022"
    },
    "CS 6321": {
        "Description": "Introduction to discourse processing from natural language texts. Automatic clustering of utterances into coherent units (segments) with hierarchical structures. State-of-the-art research in textual cohesion, coherence, and discourse understanding. Included topics are anaphoric reference and ellipsis, notion of textual context, and relationship between tense, aspect, and discourse states.",
        "Hours": "3",
        "Title": "Discourse Processing",
        "Year": "2022"
    },
    "CS 6322": {
        "Description": "This course covers modern techniques for storing and retrieving unformatted textual data and providing answers to natural language queries. Current research topics and applications of information retrieval in data mining, data warehousing, text mining, digital libraries, hypertext, multimedia data, and query processing are also presented.",
        "Hours": "3",
        "Title": "Information Retrieval",
        "Year": "2022"
    },
    "CS 6323": {
        "Description": "Theoretical foundations and programming techniques involved in computer animation and game engines. Specific topics include 2D and 3D transformations, skeletons, forward and inverse kinematics, skinning, keyframing, particle systems, rigid bodies, cloth animation, collision detection, and animation for video games.",
        "Hours": "3",
        "Title": "Computer Animation and Gaming",
        "Year": "2022"
    },
    "CS 6324": {
        "Description": "A comprehensive study of security vulnerabilities in information systems and the basic techniques for developing secure applications and practicing safe computing. Topics include common attacking techniques such as buffer overflow, Trojan, virus, etc. UNIX, Windows and Java security. Conventional encryption. Hashing functions and data integrity. Public-key encryption (RSA, Elliptic-Curve). Digital signature. Watermarking for multimedia. Security standards and applications. Building secure software and systems. Management and analysis of security. Legal and ethical issues in computer security.",
        "Hours": "3",
        "Title": "Information Security",
        "Year": "2022"
    },
    "CS 6325": {
        "Description": "The course provides a broad overview of the bioinformatics field. Comprehensive introduction to molecular biology and molecular genetics for a program of study in bioinformatics. Discussion of elementary computer algorithms in biology (e.g., sequence alignment and gene finding). Biological databases, data analysis and management.",
        "Hours": "3",
        "Title": "Introduction to Bioinformatics",
        "Year": "2019"
    },
    "CS 6326": {
        "Description": "In-depth exploration of human-computer interactions (HCI). Models and principles of HCI. The user experience (UX) lifecycle and design guidelines for a wide variety of advanced interfaces, such as mobile devices and 3D sensors. UX evaluation of interface designs.",
        "Hours": "3",
        "Title": "Human Computer Interactions",
        "Year": "2022"
    },
    "CS 6327": {
        "Description": "In-depth analysis of topics such as: video features for (human) activity and event detection; large-scale video event classification algorithms; objects-in-video counting approaches; multi-camera video handling; compressed video event detection and analyzing video in large-scale human traffic areas (such as shopping malls, airports, train-stations, etc.).",
        "Hours": "3",
        "Title": "Video Analytics",
        "Year": "2022"
    },
    "CS 6328": {
        "Description": "Theory and practice of modeling, including models for concepts, knowledge, geometry, and dynamics. A variety of model types are covered along with their algebraic and diagrammatic representations. Creative media design and representation of models is stressed.",
        "Hours": "3",
        "Title": "Modeling and Simulation",
        "Year": "2022"
    },
    "CS 6329": {
        "Description": "Concepts, methods and techniques necessary to efficiently capture software requirements in use cases and transform them into design and implementation. Use of UML in the context of an iterative, agile process with an OO model transformation approach. Use of an advanced CASE tool that allows the synchronization between the various models and the code.",
        "Hours": "3",
        "Title": "Object-Oriented Software Engineering",
        "Year": "2016"
    },
    "CS 6331": {
        "Description": "Analyzing and understanding how different media data (such as text, audio, images, video, and 3D graphics) can be stored, queried, delivered, and consumed. These aspects will be discussed from the point of view of the operating system, databases, and networking.",
        "Hours": "3",
        "Title": "Multimedia Systems",
        "Year": "2022"
    },
    "CS 6332": {
        "Description": "Concepts, techniques, and tools to capture the structure, format, and representation of binary code, and transform them for higher level analysis. Use of static analysis including data-flow analysis, point-to analysis, and shape analysis to reason about the abstractions inside binary code. Use of dynamic binary instrumentation to trace the instruction level behavior of both benign and malicious programs. Use of virtual machines to observe the whole system level behavior including OS kernels.",
        "Hours": "3",
        "Title": "Systems Security and Malicious Code Analysis",
        "Year": "2022"
    },
    "CS 6333": {
        "Description": "The principles of algorithm design for biological datasets, and analysis of influential problems and techniques. Biological sequence analysis, gene finding, RNA folding, protein folding, sequence alignment, genome assembly, comparative genomics, phylogenetics, clustering algorithms.",
        "Hours": "3",
        "Title": "Algorithms in Computational Biology",
        "Year": "2019"
    },
    "CS 6334": {
        "Description": "Theory and practice of virtual reality (VR). Provides in-depth overview of VR, including input devices, output devices, 3D navigation techniques, 3D selection and manipulation techniques, system control techniques, interaction fidelity, scenario fidelity, display fidelity, design guidelines, and evaluation methods.",
        "Hours": "3",
        "Title": "Virtual Reality",
        "Year": "2022"
    },
    "CS 6340": {
        "Description": "Fundamental techniques in design and operation of the 2G-5G wireless cellular networks and wireless LANs, including the control and the data planes. Introduction to future technologies, such as 6G and IoT. The course is a mix of qualitative and quantitative presentation.",
        "Hours": "3",
        "Title": "Wireless Networks",
        "Year": "2022"
    },
    "CS 6343": {
        "Description": "Different layers of cloud computing, infrastructure as a service (IaaS), platform as a service (PaaS), and software as a service (SaaS). Data centers. Resource management, power management, and health monitoring in IaaS cloud. Hadoop MapReduce for big data computing. PaaS examples such as GAE, Force.com. SaaS concepts and enabling technologies. Cloud storage theory and practical solutions such as GFS, Big Table, HDFS, HBase, Dynamo, Pnuts. Erasure coding and secret sharing based cloud storage. Virtualization and emulation. Server virtualization, storage virtualization, and network virtualization. Cloud security.",
        "Hours": "3",
        "Title": "Cloud Computing",
        "Year": "2022"
    },
    "CS 6344": {
        "Description": "Useful representations of data for efficient manipulation and visualization. These include, among others Dimensionality Reduction, Clustering, Euclidean Embedding, Graph Embedding, and Discriminant Functions. Techniques covered include principal component analysis (PCA), singular value decomposition (SVD), clustering, and various randomized techniques. Special emphasis is given to the performance of these techniques on big data.",
        "Hours": "3",
        "Title": "Data Representations",
        "Year": "2022"
    },
    "CS 6346": {
        "Description": "Introduction to multi-core and GPU architecture concepts. Classic and modern algorithms for coordination and synchronization. Blocking and non-blocking synchronization. Correctness conditions and reasoning about concurrent algorithms. Data structures that exploit and extract performance from multiple cores. Concurrent memory reclamation techniques. GPU programming with CUDA.",
        "Hours": "3",
        "Title": "Introduction to Multicore Programming",
        "Year": "2022"
    },
    "CS 6347": {
        "Description": "Introduction to the probabilistic and statistical techniques used in modern computer systems. Probabilistic graphical models such as Bayesian and Markov networks. Probabilistic inference techniques including variable elimination, belief propagation and its generalizations, and sampling-based algorithms such as importance sampling and Markov Chain Monte Carlo sampling. Statistical learning techniques for learning the structure and parameters of graphical models. Sequential models such as Hidden Markov models and Dynamic Bayesian networks.",
        "Hours": "3",
        "Title": "Statistical Methods in AI and Machine Learning",
        "Year": "2022"
    },
    "CS 6348": {
        "Description": "The course will teach principles, technologies, tools and trends for data, and applications security and privacy. Topics to be covered include: confidentiality, privacy and trust management; advanced access control policy management; secure databases; secure distributed systems; encryption techniques for database security; blockchain based techniques for ensuring data integrity; data privacy; privacy-preserving data mining. Students will take one system or application and develop a secure version of that system or application for the programming project.",
        "Hours": "3",
        "Title": "Data and Applications Security",
        "Year": "2022"
    },
    "CS 6349": {
        "Description": "This course covers theoretical and practical aspects of network security. The topics include use of cryptography for building secure communication protocols and authentication systems; security handshake pitfalls, Kerberos and PKI, security of TCP/IP protocols including IPsec, BGP security, VPNs, IDSes, firewalls, and anonymous routing; security of TCP/IP applications; wireless LAN security; denial-of-service defense. Students are required to do a programming project building a distributed application with certain secure communication features and required to participate in several network security lab exercises and cyber war games.",
        "Hours": "3",
        "Title": "Network Security",
        "Year": "2022"
    },
    "CS 6350": {
        "Description": "This course focuses on scalable data management and mining algorithms for analyzing very large amounts of data (i.e., Big Data). Included topics are: Mapreduce, NoSQL systems (e.g., key-value stores, column-oriented data stores, stream processing systems), association rule mining, large scale supervised and unsupervised learning, state of the art research in data streams, and applications including recommendation systems, web and big data security.",
        "Hours": "3",
        "Title": "Big Data Management and Analytics",
        "Year": "2022"
    },
    "CS 6352": {
        "Description": "Overview of case studies. Quick review of principles of probability theory. Queuing models and physical origin of random variables used in queuing models. Various important cases of the M/M/m/N queuing system. Little's law. The M/G/1 queuing system. Simulation of queuing systems. Product form solutions of open and closed queuing networks. Convolution algorithms and Mean Value Analysis for closed queuing networks. Discrete time queuing systems.",
        "Hours": "3",
        "Title": "Performance of Computer Systems and Networks",
        "Year": "2022"
    },
    "CS 6353": {
        "Description": "Lexical analyzers, context-free grammars. Top-down and bottom-up parsing; shift reduce and LR parsing. Operator-precedence, recursive-descent, predictive, and LL parsing. LR (k), LL (k) and precedence grammars will be covered.",
        "Hours": "3",
        "Title": "Compiler Construction",
        "Year": "2022"
    },
    "CS 6354": {
        "Description": "This course covers advanced theoretical concepts in software engineering and provides an extensive hands-on experience in dealing with various issues of software development. It involves a semester-long group software development project spanning software project planning and management, analysis of requirements, construction of software architecture and design, implementation, and quality assessment. The course will introduce formal specification, component-based software engineering, and software maintenance and evolution. Must have knowledge of Java.",
        "Hours": "3",
        "Title": "Advanced Software Engineering",
        "Year": "2016"
    },
    "CS 6356": {
        "Description": "Principles and techniques of software maintenance. Impact of software development process on software justifiability, maintainability, evolvability, and planning of release cycles. Use of very high-level languages and dependencies for forward engineering and reverse engineering. Achievements, pitfalls, and trends in software reuse, reverse engineering, and re-engineering.",
        "Hours": "3",
        "Title": "Software Maintenance, Evolution, and Re-Engineering",
        "Year": "2022"
    },
    "CS 6359": {
        "Description": "Analysis and practice of modern tools and concepts that can help produce software that is tolerant of change. Consideration of the primary tools of encapsulation and inheritance. Construction of software-ICs which show the parallel with hardware construction.",
        "Hours": "3",
        "Title": "Object-Oriented Analysis and Design",
        "Year": "2022"
    },
    "CS 6360": {
        "Description": "Methods, principles, and concepts that are relevant to the practice of database software design. Database system architecture; conceptual database models; relational and object-oriented databases; database system implementation; query processing and optimization; transaction processing concepts, concurrency, and recovery; security.",
        "Hours": "3",
        "Title": "Database Design",
        "Year": "2022"
    },
    "CS 6361": {
        "Description": "System and software requirements engineering. Identification, elicitation, modeling, analysis, specification, management, and evolution of functional and non-functional requirements. Strengths and weaknesses of different techniques, tools, and object-oriented methodologies. Interactions and trade-offs among hardware, software, and organization. System and sub-system integration with software and organization as components of complex, composite systems. Transition from requirements to design. Critical issues in requirements engineering.",
        "Hours": "3",
        "Title": "Advanced Requirements Engineering",
        "Year": "2022"
    },
    "CS 6362": {
        "Description": "Concepts and methodologies for the development, evolution, and reuse of software architecture and design, with an emphasis on object-orientation. Identification, analysis, and synthesis of system data, process, communication, and control components. Decomposition, assignment, and composition of functionality to design elements and connectors. Use of non-functional requirements for analyzing trade-offs and selecting among design alternatives. Transition from requirements to software architecture, design, and to implementation. State of the practice and art.",
        "Hours": "3",
        "Title": "Advanced Software Architecture and Design",
        "Year": "2016"
    },
    "CS 6363": {
        "Description": "The study of efficient algorithms for various computational problems. Algorithm design techniques. Sorting, manipulation of data structures, graphs, matrix multiplication, and pattern matching. Complexity of algorithms, lower bounds, NP completeness.",
        "Hours": "3",
        "Title": "Design and Analysis of Computer Algorithms",
        "Year": "2022"
    },
    "CS 6364": {
        "Description": "Design of machines that exhibit intelligence. Particular topics include: representation of knowledge, vision, natural language processing, search, logic and deduction, expert systems, planning, language comprehension, and machine learning.",
        "Hours": "3",
        "Title": "Artificial Intelligence",
        "Year": "2022"
    },
    "CS 6365": {
        "Description": "The course introduces data and text mining as practiced currently in the bioinformatics field. Major topics include: sequence alignment for determining similarity between proteins and genes; properties of similarities and distances; genomic, proteomic, and text databases in the real world; finding patterns (motifs) in genes and proteins; differentiating between valid patterns and noise; classification; clustering and its application to phylogenetic trees; and selected topics from text mining.",
        "Hours": "3",
        "Title": "Data and Text Mining for Computational Biology",
        "Year": "2019"
    },
    "CS 6366": {
        "Description": "Device and logical coordinate systems. Geometric transformations in two and three dimensions. Algorithms for basic 2-D drawing primitives, such as Brensenham's algorithm for lines and circles, Bezier and B-Spline functions for curves, and line and polygon clipping algorithms. Perspectives in 3-D, and hidden-line and hidden-face elimination, such as Painter's and Z-Buffer algorithms. Fractals and the Mandelbrot set.",
        "Hours": "3",
        "Title": "Computer Graphics",
        "Year": "2022"
    },
    "CS 6367": {
        "Description": "Fundamental concepts of software testing. Functional testing. GUI based testing tools. Control flow based test adequacy criteria. Data flow based test adequacy criteria. White box based testing tools. Mutation testing and testing tools. Relationship between test adequacy criteria. Finite state machine based testing. Static and dynamic program slicing for testing and debugging. Software reliability. Formal verification of program correctness.",
        "Hours": "3",
        "Title": "Software Testing, Validation and Verification",
        "Year": "2022"
    },
    "CS 6368": {
        "Description": "In-depth study of network management issues and standards in telecommunication networks. OSI management protocols including CMIP, CMISE, SNMP, and MIB. ITU's TMN (Telecommunication Management Network) standards, TMN functional architecture and information architecture. NMF (Network Management Forum) and service management, service modeling and network management API. Issues of telecommunication network management in distributed processing environment.",
        "Hours": "3",
        "Title": "Telecommunication Network Management",
        "Year": "2022"
    },
    "CS 6369": {
        "Description": "Topics include bounded reducibility and completeness, approximation algorithms and heuristics for NP-hard problems, randomized algorithms, and additional complexity classes.",
        "Hours": "3",
        "Title": "Complexity of Combinatorial Algorithms",
        "Year": "2019"
    },
    "CS 6371": {
        "Description": "Functional programming, Lambda calculus, logic programming, abstract syntax, denotational semantics of imperative languages, fixpoints semantics, verification of programs, partial evaluation, interpretation and automatic compilation, axiomatic semantics, applications of semantics to software engineering.",
        "Hours": "3",
        "Title": "Advanced Programming Languages",
        "Year": "2022"
    },
    "CS 6373": {
        "Description": "Logical formalizations of knowledge for the purpose of implementing intelligent systems that can reason in a way that mimics human reasoning. Topics include: syntax and semantics of common logic, description logic, modal epistemic logic; reasoning about uncertainties, beliefs, defaults and counterfactuals; reasoning within contexts; implementations of knowledge base and textual inference reasoning systems; and applications.",
        "Hours": "3",
        "Title": "Intelligent Systems",
        "Year": "2022"
    },
    "CS 6374": {
        "Description": "Deductive, inductive and abductive reasoning, logic-based knowledge representation and reasoning. Logic programming, constraint programming, and the Prolog language. Non-monotonic reasoning, answer set programming, and automating common sense reasoning. Applications of the above.",
        "Hours": "3",
        "Title": "Computational Logic",
        "Year": "2022"
    },
    "CS 6375": {
        "Description": "Algorithms for training perceptions and multi-layer neural nets: back propagation, Boltzmann machines, and self-organizing nets. The ID3 and the Nearest Neighbor algorithms. Formal models for analyzing learnability: exact identification in the limit and probably approximately correct (PAC) identification. Computational limitations of learning machines.",
        "Hours": "3",
        "Title": "Machine Learning",
        "Year": "2022"
    },
    "CS 6376": {
        "Description": "Topics include parallel processing, parallel machine models, parallel algorithms for sorting, searching and matrix operations. Parallel graph algorithms.",
        "Hours": "3",
        "Title": "Parallel Processing",
        "Year": "2022"
    },
    "CS 6377": {
        "Description": "This course covers the basic aspects of modern cryptography, including block ciphers, pseudorandom functions, symmetric encryption, Hash functions, message authentication, number-theoretic primitives, public-key encryption, digital signatures and zero knowledge proofs.",
        "Hours": "3",
        "Title": "Introduction to Cryptography",
        "Year": "2022"
    },
    "CS 6378": {
        "Description": "Concurrent processing, inter-process communication, process synchronization, deadlocks, introduction to queuing theory and operational analysis, topics in distributed systems and algorithms, checkpointing, recovery, multiprocessor operating systems. Must have knowledge of C, UNIX, and Socket Programming.",
        "Hours": "3",
        "Title": "Advanced Operating Systems",
        "Year": "2022"
    },
    "CS 6379": {
        "Description": "Relational data models and database management systems; theories and techniques of constructing relational databases to store biological data, including sequences, structures, genetic linkages and maps, and signal pathways. Introduction to a relational database query language (SQL) with emphasis on answering biologically important questions. Summary of current biological databases. Data integration from various sources and security. Novel data mining methods in bioinformatics with an emphasis on protein structure prediction, homology search, genomic sequence analysis, gene finding and gene mapping. Future directions for biological database development.",
        "Hours": "3",
        "Title": "Biological Database Systems and Data Mining",
        "Year": "2019"
    },
    "CS 6380": {
        "Description": "Topics include distributed algorithms, election algorithms, synchronizers, mutual exclusion, resource allocation, deadlocks, Byzantine agreement and clock synchronization, knowledge and common knowledge, reliability in distributed networks, and proving distributed programs correct.",
        "Hours": "3",
        "Title": "Distributed Computing",
        "Year": "2022"
    },
    "CS 6381": {
        "Description": "Fundamentals of combinatorics and graph theory. Combinatorial optimization, optimization algorithms for graphs (max flow, shortest routes, Euler tour, Hamiltonian tour).",
        "Hours": "3",
        "Title": "Combinatorics and Graph Algorithms",
        "Year": "2022"
    },
    "CS 6382": {
        "Description": "Formal models of computation. Recursive function theory. Undecidability and incompleteness. Selected topics in theory of computation. Instructor consent required.",
        "Hours": "3",
        "Title": "Theory of Computation",
        "Year": "2022"
    },
    "CS 6383": {
        "Description": "The course will provide a system-level understanding of biological systems by analyzing biological data using computational techniques. The major topics include: computational inference of biological networks (regulatory, protein interactions, and metabolic) and the effects of biological networks in cellular processes, development, and disease.",
        "Hours": "3",
        "Title": "Computational Systems Biology",
        "Year": "2019"
    },
    "CS 6384": {
        "Description": "Algorithms for extracting information from digital pictures. Particular topics include: analysis of motion in time varying image sequences, recovering depth from a pair of stereo images, image separation, recovering shape from textured images and shadows, object matching techniques, model based recognition, and the Hough transform.",
        "Hours": "3",
        "Title": "Computer Vision",
        "Year": "2022"
    },
    "CS 6385": {
        "Description": "This is an advanced course on topics related to the design, analysis, and development of telecommunications systems and networks. The focus is on the efficient algorithmic solutions for key problems in modern telecommunications networks, in centralized and distributed models. Topics include: main concepts in the design of distributed algorithms in synchronous and asynchronous models, analysis techniques for distributed algorithms, centralized and distributed solutions for handling design and optimization problems concerning network topology, architecture, routing, survivability, reliability, congestion, dimensioning and traffic management in modern telecommunication networks.",
        "Hours": "3",
        "Title": "Algorithmic Aspects of Telecommunication Networks",
        "Year": "2022"
    },
    "CS 6386": {
        "Description": "Programming with sockets and remote procedure calls, real time programming concepts and strategies. Operating system design for real time systems. Encryption, file compression, and implementation of fire walls. An in-depth study of TCP/IP implementation. Introduction to discrete event simulation of networks.",
        "Hours": "3",
        "Title": "Telecommunication Software Design",
        "Year": "2022"
    },
    "CS 6387": {
        "Description": "This course is intended to provide experience in a group project that requires advanced technical solutions, such as distributed multi-tier architectures, component-based technologies, automated software engineering, etc., for developing applications, such as web-based systems, knowledge-based systems, real-time systems, etc. The students will develop and maintain requirements, architecture and detailed design, implementation, and testing and their traceability relationships. Best practices in software engineering will be applied.",
        "Hours": "3",
        "Title": "Advanced Software Engineering Project",
        "Year": "2016"
    },
    "CS 6388": {
        "Description": "Techniques and disciplines for successful management of software projects. Project planning and contracts. Advanced cost estimation models. Risk management process and activities. Advanced scheduling techniques. Definition, management, and optimization of software engineering processes. Statistical process control. Software configuration management. Capability Maturity Model Integration (CMMI).",
        "Hours": "3",
        "Title": "Software Project Planning and Management",
        "Year": "2016"
    },
    "CS 6389": {
        "Description": "Formal techniques for building highly reliable systems. Use of abstractions for concisely and precisely defining system behavior. Formal logic and proof techniques for verifying the correctness of programs. Hierarchies of abstractions, state transition models, Petri Nets, communicating processes. Operational and definitional specification languages. Applications to reliability-critical, safety-critical, and mission-critical systems, ranging from commercial computer communication systems to strategic command control systems.",
        "Hours": "3",
        "Title": "Formal Methods and Programming Methodology",
        "Year": "2016"
    },
    "CS 6390": {
        "Description": "Survey of recent advancements in high-speed network technologies. Application of quantitative approach to the study of broadband integrated networks including admission control, access control, and quality of service guarantee.",
        "Hours": "3",
        "Title": "Advanced Computer Networks",
        "Year": "2022"
    },
    "CS 6391": {
        "Description": "Enabling technologies for optical networks. Wavelength-division multiplexing. Broadcast-and-select optical networks. Wavelength-routed optical networks. Virtual topology design. Routing and wavelength assignment. Network control and management. Protection and restoration. Wavelength conversion. Traffic grooming. Photonic packet switching. Optical burst switching. Survey of recent advances in optical networking.",
        "Hours": "3",
        "Title": "Optical Networks",
        "Year": "2022"
    },
    "CS 6392": {
        "Description": "Topics include coping with mobility of computing systems, data management, reliability issues, packet transmission, mobile IP, end-to-end reliable communication, channel and other resource allocation, slot assignment, routing protocols, and issues in mobile wireless networks (without base stations).",
        "Hours": "3",
        "Title": "Mobile Computing Systems",
        "Year": "2022"
    },
    "CS 6393": {
        "Description": "Recent advanced topics in algorithms in biology will be discussed. Topics will be chosen from: sorting and transformational operations on strings and permutations, structural analysis of proteins, pooling design and nonadaptive group testing, approximation algorithms, and complexity issues.",
        "Hours": "3",
        "Title": "Advanced Algorithms in Biology",
        "Year": "2019"
    },
    "CS 6394": {
        "Description": "Introduction and overview emphasizing the advantages of digital voice networks. Voice digitization. Digital transmission, multiplexing, and switching. Rearrangeable switching networks. Digital modulation for radio systems. Network operation issues: synchronization, control; integration of voice and data, packet switching and traffic analysis.",
        "Hours": "3",
        "Title": "Digital Telephony",
        "Year": "2013"
    },
    "CS 6395": {
        "Description": "Basic speech processing techniques: isolated word recognition using dynamic time warping, acoustic modeling using hidden Markov models, statistical language modeling, search algorithms in large vocabulary continuous speech recognition, components in text-to-speech systems, and architecture and components in spoken dialog systems.",
        "Hours": "3",
        "Title": "Speech Recognition, Synthesis, and Understanding",
        "Year": "2019"
    },
    "CS 6396": {
        "Description": "Introduction to real-time applications and concepts. Real-time operating systems and resource management. Specification and design methods for real-time systems. System performance analysis and optimization techniques. Project to specify, analyze, design, implement and test small real-time system.",
        "Hours": "3",
        "Title": "Real-Time Systems",
        "Year": "2022"
    },
    "CS 6397": {
        "Description": "A comprehensive study of high-level synthesis and optimization algorithms for designing high performance systems with multiple CPUs or functional units for critical applications such as Multimedia, Signal processing, Telecommunications, Networks, and Graphics applications, etc. Topics including algorithms for architecture-level synthesis, scheduling, resource binding, real-time systems, parallel processor array design and mapping, code generations for DSP processors, embedded systems and hardware/software codesigns.",
        "Hours": "3",
        "Title": "Synthesis and Optimization of High-Performance Systems",
        "Year": "2022"
    },
    "CS 6398": {
        "Description": "Typical DSP algorithms, representation of DSP algorithms, data-graph, FIR filters, convolutions, Fast Fourier Transform, Discrete Cosine Transform, low power design, VLSI implementation of DSP algorithms, implementation of DSP algorithms on DSP processors, DSP applications including wireless communication and multimedia.",
        "Hours": "3",
        "Title": "DSP Architectures",
        "Year": "2019"
    },
    "CS 6399": {
        "Description": "A comprehensive study of the fundamentals of parallel systems and architecture. Topics including parallel programming environment, fine-grain parallelism such as VLIW and superscalar, parallel computing paradigm of shared-memory, distributed-memory, data-parallel and data-flow models, cache coherence, compiling techniques to improve parallelism, scheduling theory, loop transformations, loop parallelizations and run-time systems.",
        "Hours": "3",
        "Title": "Parallel Architectures and Systems",
        "Year": "2019"
    },
    "CS 6V81": {
        "Description": "May be repeated for credit.",
        "Hours": "1-9",
        "Title": "Independent Study in Computer Science",
        "Year": "2022"
    },
    "CS 6V98": {
        "Description": "Pass/Fail only. May be repeated for credit. Instructor consent required.",
        "Hours": "3-9",
        "Title": "Thesis",
        "Year": "2022"
    },
    "CS 7301": {
        "Description": "Advanced topics and publications will be selected from the theory, design, and implementation issues in computing. May be repeated for credit as topics vary.",
        "Hours": "3",
        "Title": "Recent Advances in Computing",
        "Year": "2022"
    },
    "CS 8V02": {
        "Description": "Pass/Fail only. May be repeated for credit (9 semester credit hours maximum). Instructor consent required.",
        "Hours": "1-6",
        "Title": "Topics in Computer Science",
        "Year": "2022"
    },
    "CS 8V07": {
        "Description": "Open to students with advanced standing subject to approval of the graduate advisor. Pass/Fail only. May be repeated for credit.",
        "Hours": "1-9",
        "Title": "Research",
        "Year": "2022"
    },
    "CS 8V98": {
        "Description": "(May be repeated for credit.)",
        "Hours": "3-9",
        "Title": "Thesis",
        "Year": "2013"
    },
    "CS 8V99": {
        "Description": "Pass/Fail only. May be repeated for credit.",
        "Hours": "1-9",
        "Title": "Dissertation",
        "Year": "2022"
    },
    "ECS 1100": {
        "Description": "Introduction to engineering and computing careers; overview of Engineering and Computer Science (ECS) curricula, connections among ECS fields and to the sciences, and other fields; basic study, problem solving, and other skills needed to succeed as an ECS major.",
        "Hours": "1",
        "Title": "Introduction to Engineering and Computer Science",
        "Year": "2022"
    },
    "ECS 1200": {
        "Description": "Introduction to the engineering and computing professions; overview of ECS curricula, connections among ECS fields and to the sciences, and other fields; basic study, problem solving and other skills needed to succeed as an ECS major. Introduction to professional ethics, Engineering design and quantitative methods; team projects designed to replicate decision processes in real-world situations; additional preparatory topics for the student's ECS major.",
        "Hours": "2",
        "Title": "Introduction to Engineering and Computer Science",
        "Year": "2014"
    },
    "ECS 2361": {
        "Description": "This course exposes students to major theoretical approaches and professional codes of ethics and how they may be applied to explore a range of important social issues in the information age. Issues of professional ethics, computer crime and privacy, intellectual property, the balance between the acceptability of risk and constraints such as cost, scheduling, safety and quality, the role of globalization and various important constitutional issues are explored by drawing upon case studies.",
        "Hours": "3",
        "Title": "Social Issues and Ethics in Science and Technology",
        "Year": "2022"
    },
    "ECS 3301": {
        "Description": "Introduction to the underlying principles and applications of the emerging field of nanotechnology and nanoscience. Intended for a multidisciplinary audience with a variety of backgrounds. Introduces tools and principles relevant at the nanoscale dimension. Discusses current and future nanotechnology applications in engineering, materials, physics, chemistry, biology, electronics, and energy.",
        "Hours": "3",
        "Title": "Introduction to Nanoscience and Nanotechnology",
        "Year": "2022"
    },
    "ECS 3310": {
        "Description": "This course provides an intensive overview of materials science and engineering focusing on how structure/property/processing relationships are developed and used for different types of materials. The course illustrates roles of materials in modern technology by case studies of advances in new materials and process. Topics include atomic structure, crystalline solids, defects, failure mechanisms, phase diagrams and transformations, metal alloys, ceramics, polymers as well as their mechanical, thermal, electrical, magnetic and optical properties. Credit can not be received for both MECH 3360 and (ECS 3310 or MSEN 3310).",
        "Hours": "3",
        "Title": "Introduction to Materials Science",
        "Year": "2022"
    },
    "ECS 3361": {
        "Description": "This course exposes students to major theoretical approaches and modes of reasoning about ethics while exploring a range of important professional and ethical issues in computing and engineering, and the interrelationship between the computing and engineering professions and important elements of social systems. Issues of professional ethics, computer crime and privacy, intellectual property, the balance between the acceptability of risk and constraints such as cost, scheduling, safety and quality, the role of globalization and various important constitutional issues are explored by drawing upon engineering and computing case studies.",
        "Hours": "3",
        "Title": "Social Issues and Ethics in Computer Science and Engineering",
        "Year": "2018"
    },
    "ECS 3390": {
        "Description": "Expands students' professional and team communication skills and strategies in technical contexts. Integrates writing, speaking and group communication by developing and presenting technical information to different audiences. Written assignments focus on creating professional technical documents, such as proposals, memos, abstracts, reports and letters. Presentation assignments emphasize planning, preparing and delivering dynamic, informative and persuasive presentations. Attendance at first class mandatory.",
        "Hours": "3",
        "Title": "Professional and Technical Communication",
        "Year": "2022"
    },
    "ECSC 2100": {
        "Description": "This is a design course in which multidisciplinary teams will solve engineering-based problems for the local community. Students will learn the complete design process, awareness of the customer in engineering design, active use of rapid prototyping tools, leadership and project management skills, communication skills, and more. This course will include lectures and instruction in UTDesign Studio. May be repeated for credit.",
        "Hours": "1",
        "Title": "Engineering Project in Community Service",
        "Year": "2017"
    },
    "ECSC 3100": {
        "Description": "Design course in which multidisciplinary teams solve engineering-based problems benefiting service organizations and the local community. Students will refine the skills and knowledge gained in ECSC 2100, by continue working on projects from previous semesters, and lecture topics will focus on leadership and project management skills, communication skills, and more. This course will include lectures and instruction in UTDesign Studio. May be repeated for credit (3 semester credit hours maximum).",
        "Hours": "1",
        "Title": "Engineering Project in Community Service II",
        "Year": "2017"
    },
    "ECSC 3177": {
        "Description": "Work in an approved, supervised, professional, computer science position. Students will complete an IPP Work Report including a written narrative focusing on the accomplishments and learning gained through the IPP experience. May be repeated for credit as topics vary (6 semester credit hours maximum). Instructor consent required.",
        "Hours": "1",
        "Title": "CS IPP Assignment",
        "Year": "2022"
    },
    "ECSC 3179": {
        "Description": "Work in an approved, supervised, professional, engineering position. Students will complete an IPP Work Report including a written narrative focusing on the accomplishments and learning gained through the IPP experience. May be repeated for credit as topics vary (6 semester credit hours maximum). Instructor consent required.",
        "Hours": "1",
        "Title": "ENG IPP Assignment",
        "Year": "2022"
    },
    "ECSC 4100": {
        "Description": "Design course in which multidisciplinary teams solve engineering-based problems benefiting service organizations and the local community. Students will continue working on projects from previous semesters, and lecture topics will focus on leadership and project management skills, communication skills, and more. This course will include lectures and instruction in UTDesign Studio. May be repeated for credit (3 semester credit hours maximum). Instructor consent required.",
        "Hours": "1",
        "Title": "Engineering Project in Community Service II",
        "Year": "2016"
    },
    "ECSC 4300": {
        "Description": "Development and practice of teaching and mentoring skills in engineering and computer science. May be repeated for credit (6 semester credit hours maximum). Instructor consent required.",
        "Hours": "3",
        "Title": "Student Apprenticeship and Mentoring",
        "Year": "2022"
    },
    "ECSC 4378": {
        "Description": "Students will make use of professional engineering/computer science skills within an industrial setting as part of co-op/intern work experience. Detailed midterm and final professional quality engineering reports on the co-op project are required. May be repeated for credit as topics vary (6 semester credit hours maximum).",
        "Hours": "3",
        "Title": "Professional Industrial Practice Program",
        "Year": "2022"
    },
    "ECSC 5177": {
        "Description": "Work in an approved, supervised, computer science position. Students will complete an IPP Work Report including a written Narrative focusing on the accomplishments and learning gained through the IPP experience. Pass/Fail only. May be repeated for credit. Instructor consent required.",
        "Hours": "1",
        "Title": "CS IPP Assignment",
        "Year": "2022"
    },
    "ECSC 5179": {
        "Description": "Work in an approved, supervised, engineering position. Students will complete an IPP Work Report including a written Narrative focusing on the accomplishments and learning gained through the IPP experience. Pass/Fail only. May be repeated for credit. Instructor consent required.",
        "Hours": "1",
        "Title": "ENG IPP Assignment",
        "Year": "2022"
    },
    "SE 2340": {
        "Description": "This course introduces the concepts of computer architecture by going through multiple levels of abstraction, and the numbering systems and their basic computations. It focuses on the instruction-set architecture of the MIPS machine, including MIPS assembly programming, translation between MIPS and C, and between MIPS and machine code. General topics include performance calculation, processor datapath, pipelining, and memory hierarchy. Credit can not be received for both courses, (CS 2340 or SE 2340) and (CE 4304 or EE 4304).",
        "Hours": "3",
        "Title": "Computer Architecture",
        "Year": "2022"
    },
    "SE 2V95": {
        "Description": "Individual study under a faculty member's direction. May be repeated for credit as topics vary (6 semester credit hours maximum). Additional prerequisites may be required depending on the specific course topic. Instructor consent required.",
        "Hours": "1-6",
        "Title": "Individual Instruction in Software Engineering",
        "Year": "2022"
    },
    "SE 3162": {
        "Description": "Professional and ethical responsibilities of computer scientists and software engineers as influenced by growth in computer use and networks. Costs and benefits of computer technology. Risks and liabilities of safety-critical systems. Social implications of the Internet. Interaction between human values and technical decisions involving computing. Intellectual Property. Global impact of computing.",
        "Hours": "1",
        "Title": "Professional Responsibility in Computer Science and Software Engineering",
        "Year": "2022"
    },
    "SE 3306": {
        "Description": "Boolean logic, first-order logic, models of first-order logic. Introduction to program verification, applications in software engineering. Completeness Theorem. Regular expressions, regular sets, finite-state machines, and applications in software engineering. Graph Theory, graph algorithms. Statecharts, Petri Nets and their role in software engineering. Credit can not be received for both courses, CS 3305 and SE 3306. Double majors are required to take CS 3305.",
        "Hours": "3",
        "Title": "Mathematical Foundations of Software Engineering",
        "Year": "2022"
    },
    "SE 3340": {
        "Description": "This course introduces the concepts of computer architecture by going through multiple levels of abstraction, and the numbering systems and their basic computations. It focuses on the instruction-set architecture of the MIPS machine, including MIPS assembly programming, translation between MIPS and C, and between MIPS and machine code. General topics include performance calculation, processor datapath, pipelining, and memory hierarchy. Credit can not be received for both courses, (CS 3340 or SE 3340 or TE 3340) and (CE 4304 or EE 4304).",
        "Hours": "3",
        "Title": "Computer Architecture",
        "Year": "2019"
    },
    "SE 3341": {
        "Description": "Axiomatic probability theory, independence, conditional probability. Discrete and continuous random variables, special distributions of importance to CS/SE, and expectation. Simulation of random variables and Monte Carlo methods. Central limit theorem. Basic statistical inference, parameter estimation, hypothesis testing, and linear regression. Introduction to stochastic processes. Illustrative examples and simulation exercises from queuing, reliability, and other CS/SE applications. Credit can not be received for both courses, (CS 3341 or SE 3341 or STAT 3341) and ENGR 3341.",
        "Hours": "3",
        "Title": "Probability and Statistics in Computer Science and Software Engineering",
        "Year": "2022"
    },
    "SE 3345": {
        "Description": "Analysis of algorithms including time complexity and Big-O notation. Analysis of stacks, queues, and trees, including B-trees. Heaps, hashing, and advanced sorting techniques. Disjoint sets and graphs. Course emphasizes design and implementation.",
        "Hours": "3",
        "Title": "Data Structures and Introduction to Algorithmic Analysis",
        "Year": "2022"
    },
    "SE 3354": {
        "Description": "Introduction to software life cycle models. Software requirements engineering, formal specification and validation. Techniques for software design and testing. Cost estimation models. Issues in software quality assurance and software maintenance.",
        "Hours": "3",
        "Title": "Software Engineering",
        "Year": "2022"
    },
    "SE 3376": {
        "Description": "Advanced programming techniques utilizing procedural and object oriented programming in a UNIX environment. Topics include basic UNIX concepts, file input and output, implementation of strings, and dynamic memory allocation/management. Design and implementation of a comprehensive programming project is required.",
        "Hours": "3",
        "Title": "C/C++ Programming in a UNIX Environment",
        "Year": "2016"
    },
    "SE 3377": {
        "Description": "Basic UNIX concepts, commands and utilities, organization of UNIX file system including links and access control, creating and managing UNIX processes and threads, implementing algorithms using shell scripts, basic networking concepts including socket and client-server programming, inter-process communication using pipes and signals, using a version control system to manage work, and introduction to cloud computing. Design and implementation of a comprehensive programming project is required.",
        "Hours": "3",
        "Title": "Systems Programming in UNIX and Other Environments",
        "Year": "2022"
    },
    "SE 3V95": {
        "Description": "May be repeated for credit as topics vary (9 semester credit hours maximum). Additional prerequisites may be required depending on the specific course topic. Instructor consent required.",
        "Hours": "1-9",
        "Title": "Undergraduate Topics in Software Engineering",
        "Year": "2022"
    },
    "SE 4347": {
        "Description": "This course emphasizes the concepts and structures necessary for the design and implementation of database management systems. Topics include data models, data normalization, data description languages, query facilities, file organization, index organization, file security, data integrity, and reliability.",
        "Hours": "3",
        "Title": "Database Systems",
        "Year": "2022"
    },
    "SE 4348": {
        "Description": "An introduction to fundamental concepts in operating systems: their design, implementation, and usage. Topics include process management, main memory management, virtual memory, I/O and device drivers, file systems, secondary storage management, and an introduction to critical sections and deadlocks.",
        "Hours": "3",
        "Title": "Operating Systems Concepts",
        "Year": "2022"
    },
    "SE 4351": {
        "Description": "Introduction to system and software requirements engineering. The requirements engineering process, including requirements elicitation, specification, and validation. Essential words and types of requirements. Structural, informational, and behavioral requirements. Non-functional requirements. Scenario analysis. Conventional, object-oriented and goal-oriented methodologies.",
        "Hours": "3",
        "Title": "Requirements Engineering",
        "Year": "2022"
    },
    "SE 4352": {
        "Description": "Introduction to software design with emphasis on architectural design. Models of software architecture. Architecture styles and patterns, including explicit, event-driven, client-server, and middleware architectures. Decomposition and composition of architectural components and interactions. Use of non-functional requirements for tradeoff analysis. Component based software development, deployment and management.",
        "Hours": "3",
        "Title": "Software Architecture and Design",
        "Year": "2022"
    },
    "SE 4367": {
        "Description": "Methods for evaluating software for correctness and reliability, including code inspections, program proofs and testing methodologies. Formal and informal proofs of correctness. Code inspections and their role in software verification. Unit and system testing techniques, testing tools and limitations of testing. Statistical testing, reliability models.",
        "Hours": "3",
        "Title": "Software Testing, Verification, Validation and Quality Assurance",
        "Year": "2022"
    },
    "SE 4376": {
        "Description": "In-depth study of the features/advantages of object-oriented approach to problem solving. Special emphasis on issues of object-oriented analysis, design, implementation, and testing. Review of basic concepts of object-oriented technology (abstraction, inheritance, and polymorphism). Object-oriented programming languages, databases, and productivity tools.",
        "Hours": "3",
        "Title": "Object-Oriented Design",
        "Year": "2022"
    },
    "SE 4381": {
        "Description": "Planning and managing of software development projects. Software process models, ISO 9000, SEI's Capability Maturity Model, continuous process improvement. Planning, scheduling, tracking, cost estimation, risk management, configuration management.",
        "Hours": "3",
        "Title": "Software Project Planning and Management",
        "Year": "2022"
    },
    "SE 4399": {
        "Description": "For students conducting independent research for honors theses or projects. Topics may vary. Additional prerequisites may be required depending on the specific course topic. Instructor consent required.",
        "Hours": "3",
        "Title": "Senior Honors in Software Engineering",
        "Year": "2022"
    },
    "SE 4485": {
        "Description": "This course is intended to complement the theory and to provide an in-depth, hands-on experience in all aspects of software engineering. The students will work in teams on projects of interest to industry and will be involved in analysis of requirements, architecture and design, implementation, testing and validation, project management, software process, software maintenance, and software re-engineering. Students will also explore the potential impact of software systems on society. Additionally, this course will cover topics related to the software engineering profession including ethics and professional responsibility, entrepreneurship, and leadership. Lab fee of $ 30 required.",
        "Hours": "4",
        "Title": "Software Engineering Project",
        "Year": "2022"
    },
    "SE 4V95": {
        "Description": "May be used as SE Guided Elective on SE degree plans. Additional prerequisites may be required depending on the specific course topic. Instructor consent required. May be repeated for credit as topics vary (9 semester credit hours maximum).",
        "Hours": "1-9",
        "Title": "Undergraduate Topics in Software Engineering",
        "Year": "2022"
    },
    "SE 4V98": {
        "Description": "May be repeated for credit as topics vary (9 semester credit hours maximum). Additional prerequisites may be required depending on the specific course topic. Instructor consent required.",
        "Hours": "1-9",
        "Title": "Undergraduate Research in Software Engineering",
        "Year": "2022"
    },
    "SE 5354": {
        "Description": "Formal specification and program verification. Software life-cycle models and their stages. System and software requirements engineering; user-interface design. Software architecture, design, and analysis. Software testing, validation, and quality assurance.",
        "Hours": "3",
        "Title": "Software Engineering",
        "Year": "2022"
    },
    "SE 5V81": {
        "Description": "May be repeated for credit as topics vary (9 semester credit hours maximum).",
        "Hours": "1-9",
        "Title": "Special Topics in Computer Science",
        "Year": "2022"
    },
    "SE 6301": {
        "Description": "May be repeated for credit as topics vary.",
        "Hours": "3",
        "Title": "Special Topics in Software Engineering",
        "Year": "2022"
    },
    "SE 6316": {
        "Description": "The course addresses what agile methods are, how they are implemented (correctly), and their impact on software engineering. A variety of agile methods are described with a focus on Scrum. Issues associated with planning and controlling agile projects, along with the challenges associated with adopting agile methods are discussed.",
        "Hours": "3",
        "Title": "Agile Methods",
        "Year": "2022"
    },
    "SE 6329": {
        "Description": "Concepts, methods and techniques necessary to efficiently capture software requirements in use cases and transform them into design and implementation. Use of UML in the context of an iterative, agile process with an OO model transformation approach. Use of an advanced CASE tool that allows the synchronization between the various models and the code.",
        "Hours": "3",
        "Title": "Object-Oriented Software Engineering",
        "Year": "2022"
    },
    "SE 6354": {
        "Description": "This course covers advanced theoretical concepts in software engineering and provides an extensive hands-on experience in dealing with various issues of software development. It involves a semester-long group software development project spanning software project planning and management, analysis of requirements, construction of software architecture and design, implementation, and quality assessment. The course will introduce formal specification, component-based software engineering, and software maintenance and evolution. Must have knowledge of Java.",
        "Hours": "3",
        "Title": "Advanced Software Engineering",
        "Year": "2022"
    },
    "SE 6356": {
        "Description": "Principles and techniques of software maintenance. Impact of software development process on software justifiability, maintainability, evolvability, and planning of release cycles. Use of very high-level languages and dependencies for forward engineering and reverse engineering. Achievements, pitfalls, and trends in software reuse, reverse engineering, and re-engineering.",
        "Hours": "3",
        "Title": "Software Maintenance, Evolution, and Re-Engineering",
        "Year": "2022"
    },
    "SE 6357": {
        "Description": "Concepts of the pervasive system attributes: reliability, efficiency, maintainability, reusability, etc. Software complexity and measures. Software process measures, product measures and resource measure. Validation of software measures. Software measures and measurement theory. Measuring, monitoring and controlling reliability. Supporting tools.",
        "Hours": "3",
        "Title": "Software Quality Assurance and Metrics",
        "Year": "2019"
    },
    "SE 6359": {
        "Description": "Analysis and practice of modern tools and concepts that can help produce software that is tolerant of change. Consideration of the primary tools of encapsulation and inheritance. Construction of software-ICs which show the parallel with hardware construction.",
        "Hours": "3",
        "Title": "Object-Oriented Analysis and Design",
        "Year": "2016"
    },
    "SE 6360": {
        "Description": "Methods, principles, and concepts that are relevant to the practice of database software design. Database system architecture; conceptual database models; relational and object-oriented databases; database system implementation; query processing and optimization; transaction processing concepts, concurrency, and recovery; security.",
        "Hours": "3",
        "Title": "Database Design",
        "Year": "2016"
    },
    "SE 6361": {
        "Description": "System and software requirements engineering. Identification, elicitation, modeling, analysis, specification, management, and evolution of functional and non-functional requirements. Strengths and weaknesses of different techniques, tools, and object-oriented methodologies. Interactions and trade-offs among hardware, software, and organization. System and sub-system integration with software and organization as components of complex, composite systems. Transition from requirements to design. Critical issues in requirements engineering.",
        "Hours": "3",
        "Title": "Advanced Requirements Engineering",
        "Year": "2022"
    },
    "SE 6362": {
        "Description": "Concepts and methodologies for the development, evolution, and reuse of software architecture and design, with an emphasis on object-orientation. Identification, analysis, and synthesis of system data, process, communication, and control components. Decomposition, assignment, and composition of functionality to design elements and connectors. Use of non-functional requirements for analyzing trade-offs and selecting among design alternatives. Transition from requirements to software architecture, design, and to implementation. State of the practice and art.",
        "Hours": "3",
        "Title": "Advanced Software Architecture and Design",
        "Year": "2022"
    },
    "SE 6367": {
        "Description": "Fundamental concepts of software testing. Functional testing. GUI based testing tools. Control flow based test adequacy criteria. Data flow based test adequacy criteria. White box based testing tools. Mutation testing and testing tools. Relationship between test adequacy criteria. Finite state machine based testing. Static and dynamic program slicing for testing and debugging. Software reliability. Formal verification of program correctness.",
        "Hours": "3",
        "Title": "Software Testing, Validation and Verification",
        "Year": "2022"
    },
    "SE 6387": {
        "Description": "This course is intended to provide experience in a group project that requires advanced technical solutions, such as distributed multi-tier architectures, component-based technologies, automated software engineering, etc., for developing applications, such as web-based systems, knowledge-based systems, real-time systems, etc. The students will develop and maintain requirements, architecture and detailed design, implementation, and testing and their traceability relationships. Best practices in software engineering will be applied.",
        "Hours": "3",
        "Title": "Advanced Software Engineering Project",
        "Year": "2022"
    },
    "SE 6388": {
        "Description": "Techniques and disciplines for successful management of software projects. Project planning and contracts. Advanced cost estimation models. Risk management process and activities. Advanced scheduling techniques. Definition, management, and optimization of software engineering processes. Statistical process control. Software configuration management. Capability Maturity Model Integration (CMMI).",
        "Hours": "3",
        "Title": "Software Project Planning and Management",
        "Year": "2022"
    },
    "SE 6389": {
        "Description": "Formal techniques for building highly reliable systems. Use of abstractions for concisely and precisely defining system behavior. Formal logic and proof techniques for verifying the correctness of programs. Hierarchies of abstractions, state transition models, Petri Nets, communicating processes. Operational and definitional specification languages. Applications to reliability-critical, safety-critical, and mission-critical systems, ranging from commercial computer communication systems to strategic command control systems.",
        "Hours": "3",
        "Title": "Formal Methods and Programming Methodology",
        "Year": "2019"
    },
    "SE 6V81": {
        "Description": "May be repeated for credit.",
        "Hours": "1-9",
        "Title": "Independent Study in Software Engineering",
        "Year": "2022"
    },
    "SE 6V98": {
        "Description": "Pass/Fail only. May be repeated for credit.",
        "Hours": "3-9",
        "Title": "Thesis",
        "Year": "2019"
    },
    "SE 7301": {
        "Description": "Advanced topics and publications will be selected from the theory, design, and implementation issues in computing. May be repeated for credit as topics vary.",
        "Hours": "3",
        "Title": "Recent Advances in Computing",
        "Year": "2022"
    },
    "SE 8V02": {
        "Description": "Pass/Fail only. May be repeated for credit as topics vary (9 semester credit hours maximum).",
        "Hours": "1-6",
        "Title": "Topics in Software Engineering",
        "Year": "2022"
    },
    "SE 8V07": {
        "Description": "Open to students with advanced standing subject to approval of the graduate advisor. Pass/Fail only. May be repeated for credit.",
        "Hours": "1-9",
        "Title": "Research",
        "Year": "2022"
    },
    "SE 8V98": {
        "Description": "(May be repeated for credit.)",
        "Hours": "3-9",
        "Title": "Thesis",
        "Year": "2013"
    },
    "SE 8V99": {
        "Description": "Pass/Fail only. May be repeated for credit.",
        "Hours": "1-9",
        "Title": "Dissertation",
        "Year": "2022"
    }
}